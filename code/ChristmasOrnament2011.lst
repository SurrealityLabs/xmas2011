

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sun Nov 13 23:50:01 2011

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F505
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41                           # 5 "C:\projects-hg\christmasornament2011\code\main.c"
    42                           	psect config,class=CONFIG,delta=2 ;#
    43                           # 5 "C:\projects-hg\christmasornament2011\code\main.c"
    44  FFF  FFF4                	dw 0xFFFC & 0xFFF7 & 0xFFFF & 0xFFFF ;#
    45                           	FNCALL	_main,_rand
    46                           	FNCALL	_rand,_srand
    47                           	FNCALL	_rand,___lmul
    48                           	FNROOT	_main
    49                           	global	_inhibitModeChange
    50                           psect	idataBANK1,class=ENTRY,space=0,delta=2
    51                           global __pidataBANK1
    52  022                     __pidataBANK1:
    53                           	file	"C:\projects-hg\christmasornament2011\code\main.c"
    54                           	line	12
    55                           
    56                           ;initializer for _inhibitModeChange
    57  022  801                	retlw	01h
    58                           	global	_randx
    59                           	global	_randomNum
    60                           	global	_currentMode
    61                           	global	_displayState
    62                           	global	_randf
    63                           	global	_scratchPad
    64                           	global	_softwareTimer
    65                           	global	_switchState
    66                           	global	_OPTION
    67  0000                     _OPTION	set	0
    68                           	global	_PORTB
    69  0006                     _PORTB	set	6
    70                           	global	_PORTC
    71  0007                     _PORTC	set	7
    72                           	global	_TRISB
    73  0006                     _TRISB	set	6
    74                           	global	_TRISC
    75  0007                     _TRISC	set	7
    76                           	file	"ChristmasOrnament2011.as"
    77                           	line	#
    78                           psect cinit,class=ENTRY,delta=2
    79                           global start_initialization
    80  004                     start_initialization:
    81                           
    82                           psect	bssBANK1,class=BANK1,space=1
    83                           global __pbssBANK1
    84  030                     __pbssBANK1:
    85  030                     _randx:
    86  030                            ds      4
    87                           
    88  034                     _randomNum:
    89  034                            ds      2
    90                           
    91  036                     _currentMode:
    92  036                            ds      1
    93                           
    94  037                     _displayState:
    95  037                            ds      1
    96                           
    97  038                     _randf:
    98  038                            ds      1
    99                           
   100  039                     _scratchPad:
   101  039                            ds      1
   102                           
   103  03A                     _softwareTimer:
   104  03A                            ds      1
   105                           
   106  03B                     _switchState:
   107  03B                            ds      1
   108                           
   109                           psect	dataBANK1,class=BANK1,space=1
   110                           global __pdataBANK1
   111  03E                     __pdataBANK1:
   112                           	file	"C:\projects-hg\christmasornament2011\code\main.c"
   113  03E                     _inhibitModeChange:
   114  03E                            ds      1
   115                           
   116                           psect clrtext,class=ENTRY,delta=2
   117                           global clear_ram
   118                           ;	Called with FSR containing the base address, and
   119                           ;	W with the last address+1
   120  013                     clear_ram:
   121  013  004                	clrwdt			;clear the watchdog before getting into this loop
   122  014                     clrloop:
   123  014  060                	clrf	indf		;clear RAM location pointed to by FSR
   124  015  2A4                	incf	fsr,f		;increment pointer
   125  016  184                	xorwf	fsr,w		;XOR with final address
   126  017  E1F                	andlw	1Fh		;Test low bits only
   127  018  643                	btfsc	status,2	;have we reached the end yet?
   128  019  800                	retlw	0		;all done for this memory range, return
   129  01A  184                	xorwf	fsr,w		;XOR again to restore value
   130  01B  A14                	goto	clrloop		;do the next byte
   131                           
   132                           ; Clear objects allocated to BANK1
   133                           psect cinit,class=ENTRY,delta=2
   134  004  C30                	movlw	__pbssBANK1
   135  005  024                	movwf	fsr
   136  006  C3C                	movlw	((__pbssBANK1)+0Ch)&0xFF
   137  007  4A3  913  4A3      	fcall	clear_ram
   138                           ; Initialize objects allocated to BANK1
   139                           	global __pidataBANK1
   140                           psect cinit,class=ENTRY,delta=2
   141  00A  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   142  00B  4C4                	bcf	fsr,6	;FSR6=0, select bank1
   143  00C  4A3  922  4A3      	fcall	__pidataBANK1+0		;fetch initializer
   144  00F  03E                	movwf	__pdataBANK1+0&01fh
   145                           psect cinit,class=ENTRY,delta=2
   146                           global end_of_initialization
   147                           
   148                           ;End of C runtime variable initialization code
   149                           
   150  010                     end_of_initialization:
   151  010  064                clrf fsr
   152  011  4A3  A48           ljmp _main	;jump to C main() function
   153                           psect	cstackBANK1,class=BANK1,space=1
   154                           global __pcstackBANK1
   155  03C                     __pcstackBANK1:
   156                           	global	??_main
   157  03C                     ??_main:	; 0 bytes @ 0x0
   158  03C                     	ds	2
   159                           psect	cstackBANK0,class=BANK0,space=1
   160                           global __pcstackBANK0
   161  010                     __pcstackBANK0:
   162                           	global	?_main
   163  010                     ?_main:	; 0 bytes @ 0x0
   164                           	global	?_srand
   165  010                     ?_srand:	; 0 bytes @ 0x0
   166                           	global	?___lmul
   167  010                     ?___lmul:	; 4 bytes @ 0x0
   168                           	global	srand@x
   169  010                     srand@x:	; 2 bytes @ 0x0
   170                           	global	___lmul@multiplier
   171  010                     ___lmul@multiplier:	; 4 bytes @ 0x0
   172  010                     	ds	2
   173                           	global	??_srand
   174  012                     ??_srand:	; 0 bytes @ 0x2
   175  012                     	ds	2
   176                           	global	___lmul@multiplicand
   177  014                     ___lmul@multiplicand:	; 4 bytes @ 0x4
   178  014                     	ds	4
   179                           	global	??___lmul
   180  018                     ??___lmul:	; 0 bytes @ 0x8
   181  018                     	ds	1
   182                           	global	___lmul@product
   183  019                     ___lmul@product:	; 4 bytes @ 0x9
   184  019                     	ds	4
   185                           	global	?_rand
   186  01D                     ?_rand:	; 2 bytes @ 0xD
   187  01D                     	ds	2
   188                           	global	??_rand
   189  01F                     ??_rand:	; 0 bytes @ 0xF
   190  01F                     	ds	1
   191 ;;Data sizes: Strings 0, constant 0, data 1, bss 12, persistent 0 stack 0
   192 ;;Auto spaces:   Size  Autos    Used
   193 ;; BANK0           16     16      16
   194 ;; BANK1           16      2      15
   195 ;; BANK3           16      0       0
   196 ;; BANK2           16      0       0
   197 ;; COMMON           0      0       0
   198                           
   199 ;;
   200 ;; Pointer list with targets:
   201                           
   202 ;; ?_rand	int  size(1) Largest target is 0
   203 ;;
   204 ;; ?___lmul	unsigned long  size(1) Largest target is 0
   205 ;;
   206                           
   207                           
   208 ;;
   209 ;; Critical Paths under _main in BANK0
   210 ;;
   211 ;;   _main->_rand
   212 ;;   _rand->___lmul
   213 ;;
   214 ;; Critical Paths under _main in BANK1
   215 ;;
   216 ;;   None.
   217 ;;
   218 ;; Critical Paths under _main in BANK3
   219 ;;
   220 ;;   None.
   221 ;;
   222 ;; Critical Paths under _main in BANK2
   223 ;;
   224 ;;   None.
   225 ;;
   226 ;; Critical Paths under _main in COMMON
   227 ;;
   228 ;;   None.
   229                           
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   232 ;;
   233                           
   234 ;;
   235 ;;Call Graph Tables:
   236 ;;
   237 ;; ---------------------------------------------------------------------------------
   238 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   239 ;; ---------------------------------------------------------------------------------
   240 ;; (0) _main                                                 2     2      0     114
   241 ;;                                              0 BANK1      2     2      0
   242 ;;                               _rand
   243 ;; ---------------------------------------------------------------------------------
   244 ;; (1) _rand                                                 3     1      2     114
   245 ;;                                             13 BANK0      3     1      2
   246 ;;                              _srand
   247 ;;                             ___lmul
   248 ;; ---------------------------------------------------------------------------------
   249 ;; (2) ___lmul                                              13     5      8      92
   250 ;;                                              0 BANK0     13     5      8
   251 ;; ---------------------------------------------------------------------------------
   252 ;; (2) _srand                                                2     0      2      22
   253 ;;                                              0 BANK0      2     0      2
   254 ;; ---------------------------------------------------------------------------------
   255 ;; Estimated maximum stack depth 2
   256 ;; ---------------------------------------------------------------------------------
   257                           
   258 ;; Call Graph Graphs:
   259                           
   260 ;; _main (ROOT)
   261 ;;   _rand
   262 ;;     _srand
   263 ;;     ___lmul
   264 ;;
   265                           
   266 ;; Address spaces:
   267                           
   268 ;;Name               Size   Autos  Total    Cost      Usage
   269 ;;STACK                0      0       2       0        0.0%
   270 ;;NULL                 0      0       0       0        0.0%
   271 ;;CODE                 0      0       0       0        0.0%
   272 ;;BITSFR0              0      0       0       1        0.0%
   273 ;;SFR0                 0      0       0       1        0.0%
   274 ;;ABS                  0      0      1F       1        0.0%
   275 ;;BITBANK0            10      0       0       2        0.0%
   276 ;;BITSFR1              0      0       0       2        0.0%
   277 ;;SFR1                 0      0       0       2        0.0%
   278 ;;BANK0               10     10      10       3      100.0%
   279 ;;BITBANK1            10      0       0       4        0.0%
   280 ;;BITSFR3              0      0       0       4        0.0%
   281 ;;SFR3                 0      0       0       4        0.0%
   282 ;;BANK1               10      2       F       5       93.8%
   283 ;;BITSFR2              0      0       0       5        0.0%
   284 ;;SFR2                 0      0       0       5        0.0%
   285 ;;DATA                 0      0      21       6        0.0%
   286 ;;BITBANK3            10      0       0       7        0.0%
   287 ;;BANK3               10      0       0       8        0.0%
   288 ;;BITBANK2            10      0       0       9        0.0%
   289 ;;BANK2               10      0       0      10        0.0%
   290 ;;BITCOMMON            0      0       0      11        0.0%
   291 ;;COMMON               0      0       0      12        0.0%
   292                           
   293                           	global	_main
   294                           psect	maintext,global,class=CODE,delta=2
   295                           global __pmaintext
   296  048                     __pmaintext:
   297                           
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 15 in file "C:\projects-hg\christmasornament2011\code\main.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;		None               void
   307 ;; Registers used:
   308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, pcla
       th, cstack
   309 ;; Tracked objects:
   310 ;;		On entry : 17F/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
   314 ;;      Params:         0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0
   316 ;;      Temps:          0       2       0       0       0
   317 ;;      Totals:         0       2       0       0       0
   318 ;;Total ram usage:        2 bytes
   319 ;; Hardware stack levels required when called:    2
   320 ;; This function calls:
   321 ;;		_rand
   322 ;; This function is called by:
   323 ;;		Startup code after reset
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           psect	maintext
   327                           	file	"C:\projects-hg\christmasornament2011\code\main.c"
   328                           	line	15
   329                           	global	__size_of_main
   330  01B8                     	__size_of_main	equ	__end_of_main-_main
   331                           	
   332  048                     _main:	
   333                           	opt	stack 0
   334                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+7+pclath+cstack]
   335                           	line	17
   336                           	
   337  048                     l1615:	
   338                           ;main.c: 17: OPTION = 0b01000111;
   339  048  C47                	movlw	(047h)
   340  049  002                	option
   341                           	line	19
   342                           ;main.c: 19: TRISC = 0x00;
   343  04A  C00                	movlw	0
   344  04B  007                	tris	0x7
   345                           	line	20
   346                           ;main.c: 20: TRISB = 0x01;
   347  04C  C01                	movlw	(01h)
   348  04D  006                	tris	0x6
   349                           	line	21
   350                           	
   351  04E                     l1617:	
   352                           ;main.c: 21: PORTC = 0x00;
   353  04E  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   354  04F  4C4                	bcf	fsr,6	;FSR6=0, select bank0
   355  050  067                	clrf	(7)	;volatile
   356                           	line	22
   357                           	
   358  051                     l1619:	
   359                           ;main.c: 22: PORTB = 0x00;
   360  051  066                	clrf	(6)	;volatile
   361  052  A53                	goto	l1621
   362                           	line	25
   363                           ;main.c: 25: while(1) {
   364                           	
   365  053                     l103:	
   366                           	line	28
   367                           	
   368  053                     l1621:	
   369                           ;main.c: 28: _delay((unsigned long)((65)*(4000000/4000.0)));
   370                           	opt asmopt_off
   371  053  C55                movlw	85
   372  054  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   373  055  03D                movwf	((??_main+0)^020h+0+1),f
   374  056  C69                	movlw	105
   375  057  03C                movwf	((??_main+0)^020h+0),f
   376  058                     u2767:
   377  058  2FC                	decfsz	((??_main+0)^020h+0),f
   378  059  A58                	goto	u2767
   379  05A  2FD                	decfsz	((??_main+0)^020h+0+1),f
   380  05B  A58                	goto	u2767
   381                           opt asmopt_on
   382                           
   383                           	line	29
   384                           	
   385  05C                     l1623:	
   386                           ;main.c: 29: softwareTimer++;
   387  05C  C01                	movlw	(01h)
   388  05D  02F                	movwf	btemp+7
   389  05E  20F                	movf	btemp+7,w
   390  05F  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   391  060  4C4                	bcf	fsr,6	;FSR6=0, select bank1
   392  061  1FA                	addwf	(_softwareTimer)^020h,f
   393                           	line	33
   394                           	
   395  062                     l1625:	
   396                           ;main.c: 33: if(switchState == 0) {
   397  062  23B                	movf	(_switchState)^020h,f
   398  063  743                	skipz
   399  064  A66                	goto	u2531
   400  065  A67                	goto	u2530
   401  066                     u2531:
   402  066  A75                	goto	l1633
   403  067                     u2530:
   404                           	line	36
   405                           	
   406  067                     l1627:	
   407                           ;main.c: 36: if(!(PORTB & 0x01)) {
   408  067  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   409  068  606                	btfsc	(6),(0)&7
   410  069  A6B                	goto	u2541
   411  06A  A6C                	goto	u2540
   412  06B                     u2541:
   413  06B  A71                	goto	l1631
   414  06C                     u2540:
   415                           	line	37
   416                           	
   417  06C                     l1629:	
   418                           ;main.c: 37: switchState = 1;
   419  06C  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   420  06D  07B                	clrf	(_switchState)^020h
   421  06E  503                	bsf	status,0
   422  06F  37B                	rlf	(_switchState)^020h,f
   423                           	line	38
   424                           ;main.c: 38: } else {
   425  070  BDF                	goto	l1785
   426                           	
   427  071                     l105:	
   428                           	line	39
   429                           	
   430  071                     l1631:	
   431                           ;main.c: 39: switchState = 0;
   432  071  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   433  072  07B                	clrf	(_switchState)^020h
   434  073  BDF                	goto	l1785
   435                           	line	40
   436                           	
   437  074                     l106:	
   438                           	line	41
   439                           ;main.c: 40: }
   440                           ;main.c: 41: } else if(switchState == 1) {
   441  074  BDF                	goto	l1785
   442                           	
   443  075                     l104:	
   444                           	
   445  075                     l1633:	
   446  075  21B                	movf	(_switchState)^020h,w
   447  076  F01                	xorlw	01h
   448  077  743                	skipz
   449  078  A7A                	goto	u2551
   450  079  A7B                	goto	u2550
   451  07A                     u2551:
   452  07A  A8A                	goto	l1641
   453  07B                     u2550:
   454                           	line	43
   455                           	
   456  07B                     l1635:	
   457                           ;main.c: 43: if(!(PORTB & 0x01)) {
   458  07B  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   459  07C  606                	btfsc	(6),(0)&7
   460  07D  A7F                	goto	u2561
   461  07E  A80                	goto	u2560
   462  07F                     u2561:
   463  07F  A84                	goto	l1639
   464  080                     u2560:
   465                           	line	44
   466                           	
   467  080                     l1637:	
   468                           ;main.c: 44: switchState = 2;
   469  080  C02                	movlw	(02h)
   470  081  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   471  082  03B                	movwf	(_switchState)^020h
   472                           	line	45
   473                           ;main.c: 45: } else {
   474  083  BDF                	goto	l1785
   475                           	
   476  084                     l109:	
   477                           	line	46
   478                           	
   479  084                     l1639:	
   480                           ;main.c: 46: switchState = 1;
   481  084  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   482  085  07B                	clrf	(_switchState)^020h
   483  086  503                	bsf	status,0
   484  087  37B                	rlf	(_switchState)^020h,f
   485  088  BDF                	goto	l1785
   486                           	line	47
   487                           	
   488  089                     l110:	
   489                           	line	48
   490                           ;main.c: 47: }
   491                           ;main.c: 48: } else if(switchState == 2) {
   492  089  BDF                	goto	l1785
   493                           	
   494  08A                     l108:	
   495                           	
   496  08A                     l1641:	
   497  08A  21B                	movf	(_switchState)^020h,w
   498  08B  F02                	xorlw	02h
   499  08C  743                	skipz
   500  08D  A8F                	goto	u2571
   501  08E  A90                	goto	u2570
   502  08F                     u2571:
   503  08F  AB0                	goto	l1657
   504  090                     u2570:
   505                           	line	50
   506                           	
   507  090                     l1643:	
   508                           ;main.c: 50: if(PORTB & 0x01) {
   509  090  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   510  091  706                	btfss	(6),(0)&7
   511  092  A94                	goto	u2581
   512  093  A95                	goto	u2580
   513  094                     u2581:
   514  094  AAB                	goto	l1655
   515  095                     u2580:
   516                           	line	51
   517                           	
   518  095                     l1645:	
   519                           ;main.c: 51: if(inhibitModeChange) {
   520  095  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   521  096  21E                	movf	(_inhibitModeChange)^020h,w
   522  097  743                	skipz
   523  098  A9A                	goto	u2590
   524  099  A9C                	goto	l1649
   525  09A                     u2590:
   526                           	line	52
   527                           	
   528  09A                     l1647:	
   529                           ;main.c: 52: inhibitModeChange = 0;
   530  09A  07E                	clrf	(_inhibitModeChange)^020h
   531                           	line	53
   532                           ;main.c: 53: } else {
   533  09B  AA9                	goto	l115
   534                           	
   535  09C                     l114:	
   536                           	line	54
   537                           	
   538  09C                     l1649:	
   539                           ;main.c: 54: currentMode++;
   540  09C  C01                	movlw	(01h)
   541  09D  02F                	movwf	btemp+7
   542  09E  20F                	movf	btemp+7,w
   543  09F  1F6                	addwf	(_currentMode)^020h,f
   544                           	line	55
   545                           	
   546  0A0                     l1651:	
   547                           ;main.c: 55: if(currentMode > 8) currentMode = 0;
   548  0A0  C09                	movlw	(09h)
   549  0A1  096                	subwf	(_currentMode)^020h,w
   550  0A2  703                	skipc
   551  0A3  AA5                	goto	u2601
   552  0A4  AA6                	goto	u2600
   553  0A5                     u2601:
   554  0A5  AA7                	goto	l116
   555  0A6                     u2600:
   556                           	
   557  0A6                     l1653:	
   558  0A6  076                	clrf	(_currentMode)^020h
   559                           	
   560  0A7                     l116:	
   561                           	line	56
   562                           ;main.c: 56: displayState = 0;
   563  0A7  077                	clrf	(_displayState)^020h
   564                           	line	57
   565                           ;main.c: 57: softwareTimer = 0;
   566  0A8  07A                	clrf	(_softwareTimer)^020h
   567                           	line	58
   568                           	
   569  0A9                     l115:	
   570                           	line	59
   571                           ;main.c: 58: }
   572                           ;main.c: 59: switchState = 0;
   573  0A9  07B                	clrf	(_switchState)^020h
   574                           	line	60
   575                           ;main.c: 60: } else {
   576  0AA  BDF                	goto	l1785
   577                           	
   578  0AB                     l113:	
   579                           	line	61
   580                           	
   581  0AB                     l1655:	
   582                           ;main.c: 61: switchState = 2;
   583  0AB  C02                	movlw	(02h)
   584  0AC  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   585  0AD  03B                	movwf	(_switchState)^020h
   586  0AE  BDF                	goto	l1785
   587                           	line	62
   588                           	
   589  0AF                     l117:	
   590                           	line	63
   591                           ;main.c: 62: }
   592                           ;main.c: 63: } else {
   593  0AF  BDF                	goto	l1785
   594                           	
   595  0B0                     l112:	
   596                           	line	64
   597                           	
   598  0B0                     l1657:	
   599                           ;main.c: 64: switchState = 0;
   600  0B0  07B                	clrf	(_switchState)^020h
   601  0B1  BDF                	goto	l1785
   602                           	line	65
   603                           	
   604  0B2                     l118:	
   605  0B2  BDF                	goto	l1785
   606                           	
   607  0B3                     l111:	
   608  0B3  BDF                	goto	l1785
   609                           	
   610  0B4                     l107:	
   611                           	line	68
   612                           ;main.c: 65: }
   613                           ;main.c: 68: switch(currentMode) {
   614  0B4  BDF                	goto	l1785
   615                           	line	69
   616                           ;main.c: 69: case 0:
   617                           	
   618  0B5                     l120:	
   619                           	line	70
   620                           	
   621  0B5                     l1659:	
   622                           ;main.c: 70: if(softwareTimer >= 8) {
   623  0B5  C08                	movlw	(08h)
   624  0B6  09A                	subwf	(_softwareTimer)^020h,w
   625  0B7  703                	skipc
   626  0B8  ABA                	goto	u2611
   627  0B9  ABB                	goto	u2610
   628  0BA                     u2611:
   629  0BA  A53                	goto	l1621
   630  0BB                     u2610:
   631                           	line	71
   632                           	
   633  0BB                     l1661:	
   634                           ;main.c: 71: PORTB = 0b00110100;
   635  0BB  C34                	movlw	(034h)
   636  0BC  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   637  0BD  026                	movwf	(6)	;volatile
   638                           	line	72
   639                           ;main.c: 72: PORTC = 0b00111111;
   640  0BE  C3F                	movlw	(03Fh)
   641  0BF  027                	movwf	(7)	;volatile
   642                           	line	73
   643                           	
   644  0C0                     l1663:	
   645                           ;main.c: 73: softwareTimer = 0;
   646  0C0  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   647  0C1  07A                	clrf	(_softwareTimer)^020h
   648  0C2  A53                	goto	l1621
   649                           	line	74
   650                           	
   651  0C3                     l121:	
   652                           	line	75
   653                           ;main.c: 74: }
   654                           ;main.c: 75: break;
   655  0C3  A53                	goto	l1621
   656                           	line	76
   657                           ;main.c: 76: case 1:
   658                           	
   659  0C4                     l123:	
   660                           	line	77
   661                           	
   662  0C4                     l1665:	
   663                           ;main.c: 77: if(softwareTimer >= 8) {
   664  0C4  C08                	movlw	(08h)
   665  0C5  09A                	subwf	(_softwareTimer)^020h,w
   666  0C6  703                	skipc
   667  0C7  AC9                	goto	u2621
   668  0C8  ACA                	goto	u2620
   669  0C9                     u2621:
   670  0C9  A53                	goto	l1621
   671  0CA                     u2620:
   672                           	line	78
   673                           	
   674  0CA                     l1667:	
   675                           ;main.c: 78: if(displayState == 0) {
   676  0CA  237                	movf	(_displayState)^020h,f
   677  0CB  743                	skipz
   678  0CC  ACE                	goto	u2631
   679  0CD  ACF                	goto	u2630
   680  0CE                     u2631:
   681  0CE  AD9                	goto	l1673
   682  0CF                     u2630:
   683                           	line	79
   684                           	
   685  0CF                     l1669:	
   686                           ;main.c: 79: PORTB = 0b00110100;
   687  0CF  C34                	movlw	(034h)
   688  0D0  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   689  0D1  026                	movwf	(6)	;volatile
   690                           	line	80
   691                           ;main.c: 80: PORTC = 0b00111111;
   692  0D2  C3F                	movlw	(03Fh)
   693  0D3  027                	movwf	(7)	;volatile
   694                           	line	81
   695                           	
   696  0D4                     l1671:	
   697                           ;main.c: 81: displayState = 1;
   698  0D4  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   699  0D5  077                	clrf	(_displayState)^020h
   700  0D6  503                	bsf	status,0
   701  0D7  377                	rlf	(_displayState)^020h,f
   702                           	line	82
   703                           ;main.c: 82: } else {
   704  0D8  ADF                	goto	l1677
   705                           	
   706  0D9                     l125:	
   707                           	line	83
   708                           	
   709  0D9                     l1673:	
   710                           ;main.c: 83: PORTB = 0x00;
   711  0D9  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   712  0DA  066                	clrf	(6)	;volatile
   713                           	line	84
   714                           ;main.c: 84: PORTC = 0x00;
   715  0DB  067                	clrf	(7)	;volatile
   716                           	line	85
   717                           	
   718  0DC                     l1675:	
   719                           ;main.c: 85: displayState = 0;
   720  0DC  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   721  0DD  077                	clrf	(_displayState)^020h
   722  0DE  ADF                	goto	l1677
   723                           	line	86
   724                           	
   725  0DF                     l126:	
   726                           	line	87
   727                           	
   728  0DF                     l1677:	
   729                           ;main.c: 86: }
   730                           ;main.c: 87: softwareTimer = 0;
   731  0DF  07A                	clrf	(_softwareTimer)^020h
   732  0E0  A53                	goto	l1621
   733                           	line	88
   734                           	
   735  0E1                     l124:	
   736                           	line	89
   737                           ;main.c: 88: }
   738                           ;main.c: 89: break;
   739  0E1  A53                	goto	l1621
   740                           	line	90
   741                           ;main.c: 90: case 2:
   742                           	
   743  0E2                     l127:	
   744                           	line	91
   745                           	
   746  0E2                     l1679:	
   747                           ;main.c: 91: if(softwareTimer >= 8) {
   748  0E2  C08                	movlw	(08h)
   749  0E3  09A                	subwf	(_softwareTimer)^020h,w
   750  0E4  703                	skipc
   751  0E5  AE7                	goto	u2641
   752  0E6  AE8                	goto	u2640
   753  0E7                     u2641:
   754  0E7  A53                	goto	l1621
   755  0E8                     u2640:
   756                           	line	92
   757                           	
   758  0E8                     l1681:	
   759                           ;main.c: 92: if(displayState == 0) {
   760  0E8  237                	movf	(_displayState)^020h,f
   761  0E9  743                	skipz
   762  0EA  AEC                	goto	u2651
   763  0EB  AED                	goto	u2650
   764  0EC                     u2651:
   765  0EC  AF7                	goto	l1687
   766  0ED                     u2650:
   767                           	line	93
   768                           	
   769  0ED                     l1683:	
   770                           ;main.c: 93: PORTB = 0b00000100;
   771  0ED  C04                	movlw	(04h)
   772  0EE  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   773  0EF  026                	movwf	(6)	;volatile
   774                           	line	94
   775                           ;main.c: 94: PORTC = 0b00101110;
   776  0F0  C2E                	movlw	(02Eh)
   777  0F1  027                	movwf	(7)	;volatile
   778                           	line	95
   779                           	
   780  0F2                     l1685:	
   781                           ;main.c: 95: displayState = 1;
   782  0F2  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   783  0F3  077                	clrf	(_displayState)^020h
   784  0F4  503                	bsf	status,0
   785  0F5  377                	rlf	(_displayState)^020h,f
   786                           	line	96
   787                           ;main.c: 96: } else {
   788  0F6  AFF                	goto	l1691
   789                           	
   790  0F7                     l129:	
   791                           	line	97
   792                           	
   793  0F7                     l1687:	
   794                           ;main.c: 97: PORTB = 0b00110000;
   795  0F7  C30                	movlw	(030h)
   796  0F8  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   797  0F9  026                	movwf	(6)	;volatile
   798                           	line	98
   799                           ;main.c: 98: PORTC = 0b00010001;
   800  0FA  C11                	movlw	(011h)
   801  0FB  027                	movwf	(7)	;volatile
   802                           	line	99
   803                           	
   804  0FC                     l1689:	
   805                           ;main.c: 99: displayState = 0;
   806  0FC  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   807  0FD  077                	clrf	(_displayState)^020h
   808  0FE  AFF                	goto	l1691
   809                           	line	100
   810                           	
   811  0FF                     l130:	
   812                           	line	101
   813                           	
   814  0FF                     l1691:	
   815                           ;main.c: 100: }
   816                           ;main.c: 101: softwareTimer = 0;
   817  0FF  07A                	clrf	(_softwareTimer)^020h
   818  100  A53                	goto	l1621
   819                           	line	102
   820                           	
   821  101                     l128:	
   822                           	line	103
   823                           ;main.c: 102: }
   824                           ;main.c: 103: break;
   825  101  A53                	goto	l1621
   826                           	line	104
   827                           ;main.c: 104: case 3:
   828                           	
   829  102                     l131:	
   830                           	line	105
   831                           	
   832  102                     l1693:	
   833                           ;main.c: 105: if(softwareTimer >= 4) {
   834  102  C04                	movlw	(04h)
   835  103  09A                	subwf	(_softwareTimer)^020h,w
   836  104  703                	skipc
   837  105  B07                	goto	u2661
   838  106  B08                	goto	u2660
   839  107                     u2661:
   840  107  A53                	goto	l1621
   841  108                     u2660:
   842                           	line	106
   843                           	
   844  108                     l1695:	
   845                           ;main.c: 106: if(displayState == 0) {
   846  108  237                	movf	(_displayState)^020h,f
   847  109  743                	skipz
   848  10A  B0C                	goto	u2671
   849  10B  B0D                	goto	u2670
   850  10C                     u2671:
   851  10C  B16                	goto	l1703
   852  10D                     u2670:
   853                           	line	107
   854                           	
   855  10D                     l1697:	
   856                           ;main.c: 107: PORTB = 0b00000000;
   857  10D  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   858  10E  066                	clrf	(6)	;volatile
   859                           	line	108
   860                           	
   861  10F                     l1699:	
   862                           ;main.c: 108: PORTC = 0b00010110;
   863  10F  C16                	movlw	(016h)
   864  110  027                	movwf	(7)	;volatile
   865                           	line	109
   866                           	
   867  111                     l1701:	
   868                           ;main.c: 109: displayState = 1;
   869  111  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   870  112  077                	clrf	(_displayState)^020h
   871  113  503                	bsf	status,0
   872  114  377                	rlf	(_displayState)^020h,f
   873                           	line	110
   874                           ;main.c: 110: } else if(displayState == 1) {
   875  115  B2E                	goto	l1711
   876                           	
   877  116                     l133:	
   878                           	
   879  116                     l1703:	
   880  116  217                	movf	(_displayState)^020h,w
   881  117  F01                	xorlw	01h
   882  118  743                	skipz
   883  119  B1B                	goto	u2681
   884  11A  B1C                	goto	u2680
   885  11B                     u2681:
   886  11B  B25                	goto	l1707
   887  11C                     u2680:
   888                           	line	111
   889                           	
   890  11C                     l1705:	
   891                           ;main.c: 111: PORTB = 0b00100000;
   892  11C  C20                	movlw	(020h)
   893  11D  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   894  11E  026                	movwf	(6)	;volatile
   895                           	line	112
   896                           ;main.c: 112: PORTC = 0b00100001;
   897  11F  C21                	movlw	(021h)
   898  120  027                	movwf	(7)	;volatile
   899                           	line	113
   900                           ;main.c: 113: displayState = 2;
   901  121  C02                	movlw	(02h)
   902  122  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   903  123  037                	movwf	(_displayState)^020h
   904                           	line	114
   905                           ;main.c: 114: } else {
   906  124  B2E                	goto	l1711
   907                           	
   908  125                     l135:	
   909                           	line	115
   910                           	
   911  125                     l1707:	
   912                           ;main.c: 115: PORTB = 0b00010100;
   913  125  C14                	movlw	(014h)
   914  126  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   915  127  026                	movwf	(6)	;volatile
   916                           	line	116
   917                           ;main.c: 116: PORTC = 0b00001000;
   918  128  C08                	movlw	(08h)
   919  129  027                	movwf	(7)	;volatile
   920                           	line	117
   921                           	
   922  12A                     l1709:	
   923                           ;main.c: 117: displayState = 0;
   924  12A  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   925  12B  077                	clrf	(_displayState)^020h
   926  12C  B2E                	goto	l1711
   927                           	line	118
   928                           	
   929  12D                     l136:	
   930  12D  B2E                	goto	l1711
   931                           	
   932  12E                     l134:	
   933                           	line	119
   934                           	
   935  12E                     l1711:	
   936                           ;main.c: 118: }
   937                           ;main.c: 119: softwareTimer = 0;
   938  12E  07A                	clrf	(_softwareTimer)^020h
   939  12F  A53                	goto	l1621
   940                           	line	120
   941                           	
   942  130                     l132:	
   943                           	line	121
   944                           ;main.c: 120: }
   945                           ;main.c: 121: break;
   946  130  A53                	goto	l1621
   947                           	line	122
   948                           ;main.c: 122: case 4:
   949                           	
   950  131                     l137:	
   951                           	line	123
   952                           	
   953  131                     l1713:	
   954                           ;main.c: 123: if(softwareTimer >= 4) {
   955  131  C04                	movlw	(04h)
   956  132  09A                	subwf	(_softwareTimer)^020h,w
   957  133  703                	skipc
   958  134  B36                	goto	u2691
   959  135  B37                	goto	u2690
   960  136                     u2691:
   961  136  A53                	goto	l1621
   962  137                     u2690:
   963                           	line	124
   964                           	
   965  137                     l1715:	
   966                           ;main.c: 124: if(displayState == 0) {
   967  137  237                	movf	(_displayState)^020h,f
   968  138  743                	skipz
   969  139  B3B                	goto	u2701
   970  13A  B3C                	goto	u2700
   971  13B                     u2701:
   972  13B  B46                	goto	l1721
   973  13C                     u2700:
   974                           	line	125
   975                           	
   976  13C                     l1717:	
   977                           ;main.c: 125: PORTB = 0b00000100;
   978  13C  C04                	movlw	(04h)
   979  13D  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   980  13E  026                	movwf	(6)	;volatile
   981                           	line	126
   982                           ;main.c: 126: PORTC = 0b00010111;
   983  13F  C17                	movlw	(017h)
   984  140  027                	movwf	(7)	;volatile
   985                           	line	127
   986                           	
   987  141                     l1719:	
   988                           ;main.c: 127: displayState = 1;
   989  141  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   990  142  077                	clrf	(_displayState)^020h
   991  143  503                	bsf	status,0
   992  144  377                	rlf	(_displayState)^020h,f
   993                           	line	128
   994                           ;main.c: 128: } else if(displayState == 1) {
   995  145  B5E                	goto	l1729
   996                           	
   997  146                     l139:	
   998                           	
   999  146                     l1721:	
  1000  146  217                	movf	(_displayState)^020h,w
  1001  147  F01                	xorlw	01h
  1002  148  743                	skipz
  1003  149  B4B                	goto	u2711
  1004  14A  B4C                	goto	u2710
  1005  14B                     u2711:
  1006  14B  B55                	goto	l1725
  1007  14C                     u2710:
  1008                           	line	129
  1009                           	
  1010  14C                     l1723:	
  1011                           ;main.c: 129: PORTB = 0b00100100;
  1012  14C  C24                	movlw	(024h)
  1013  14D  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1014  14E  026                	movwf	(6)	;volatile
  1015                           	line	130
  1016                           ;main.c: 130: PORTC = 0b00100011;
  1017  14F  C23                	movlw	(023h)
  1018  150  027                	movwf	(7)	;volatile
  1019                           	line	131
  1020                           ;main.c: 131: displayState = 2;
  1021  151  C02                	movlw	(02h)
  1022  152  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1023  153  037                	movwf	(_displayState)^020h
  1024                           	line	132
  1025                           ;main.c: 132: } else {
  1026  154  B5E                	goto	l1729
  1027                           	
  1028  155                     l141:	
  1029                           	line	133
  1030                           	
  1031  155                     l1725:	
  1032                           ;main.c: 133: PORTB = 0b00010100;
  1033  155  C14                	movlw	(014h)
  1034  156  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1035  157  026                	movwf	(6)	;volatile
  1036                           	line	134
  1037                           ;main.c: 134: PORTC = 0b00001011;
  1038  158  C0B                	movlw	(0Bh)
  1039  159  027                	movwf	(7)	;volatile
  1040                           	line	135
  1041                           	
  1042  15A                     l1727:	
  1043                           ;main.c: 135: displayState = 0;
  1044  15A  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1045  15B  077                	clrf	(_displayState)^020h
  1046  15C  B5E                	goto	l1729
  1047                           	line	136
  1048                           	
  1049  15D                     l142:	
  1050  15D  B5E                	goto	l1729
  1051                           	
  1052  15E                     l140:	
  1053                           	line	137
  1054                           	
  1055  15E                     l1729:	
  1056                           ;main.c: 136: }
  1057                           ;main.c: 137: softwareTimer = 0;
  1058  15E  07A                	clrf	(_softwareTimer)^020h
  1059  15F  A53                	goto	l1621
  1060                           	line	138
  1061                           	
  1062  160                     l138:	
  1063                           	line	139
  1064                           ;main.c: 138: }
  1065                           ;main.c: 139: break;
  1066  160  A53                	goto	l1621
  1067                           	line	140
  1068                           ;main.c: 140: case 5:
  1069                           	
  1070  161                     l143:	
  1071                           	line	141
  1072                           	
  1073  161                     l1731:	
  1074                           ;main.c: 141: if(softwareTimer >= 8) {
  1075  161  C08                	movlw	(08h)
  1076  162  09A                	subwf	(_softwareTimer)^020h,w
  1077  163  703                	skipc
  1078  164  B66                	goto	u2721
  1079  165  B67                	goto	u2720
  1080  166                     u2721:
  1081  166  A53                	goto	l1621
  1082  167                     u2720:
  1083                           	line	142
  1084                           	
  1085  167                     l1733:	
  1086                           ;main.c: 142: if(displayState == 0) {
  1087  167  237                	movf	(_displayState)^020h,f
  1088  168  743                	skipz
  1089  169  B6B                	goto	u2731
  1090  16A  B6C                	goto	u2730
  1091  16B                     u2731:
  1092  16B  B76                	goto	l1739
  1093  16C                     u2730:
  1094                           	line	143
  1095                           	
  1096  16C                     l1735:	
  1097                           ;main.c: 143: PORTB = 0b00110100;
  1098  16C  C34                	movlw	(034h)
  1099  16D  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1100  16E  026                	movwf	(6)	;volatile
  1101                           	line	144
  1102                           ;main.c: 144: PORTC = 0b00111111;
  1103  16F  C3F                	movlw	(03Fh)
  1104  170  027                	movwf	(7)	;volatile
  1105                           	line	145
  1106                           	
  1107  171                     l1737:	
  1108                           ;main.c: 145: displayState = 1;
  1109  171  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1110  172  077                	clrf	(_displayState)^020h
  1111  173  503                	bsf	status,0
  1112  174  377                	rlf	(_displayState)^020h,f
  1113                           	line	146
  1114                           ;main.c: 146: } else {
  1115  175  B7E                	goto	l1743
  1116                           	
  1117  176                     l145:	
  1118                           	line	147
  1119                           	
  1120  176                     l1739:	
  1121                           ;main.c: 147: PORTB = 0b00000100;
  1122  176  C04                	movlw	(04h)
  1123  177  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1124  178  026                	movwf	(6)	;volatile
  1125                           	line	148
  1126                           ;main.c: 148: PORTC = 0b00000011;
  1127  179  C03                	movlw	(03h)
  1128  17A  027                	movwf	(7)	;volatile
  1129                           	line	149
  1130                           	
  1131  17B                     l1741:	
  1132                           ;main.c: 149: displayState = 0;
  1133  17B  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1134  17C  077                	clrf	(_displayState)^020h
  1135  17D  B7E                	goto	l1743
  1136                           	line	150
  1137                           	
  1138  17E                     l146:	
  1139                           	line	151
  1140                           	
  1141  17E                     l1743:	
  1142                           ;main.c: 150: }
  1143                           ;main.c: 151: softwareTimer = 0;
  1144  17E  07A                	clrf	(_softwareTimer)^020h
  1145  17F  A53                	goto	l1621
  1146                           	line	152
  1147                           	
  1148  180                     l144:	
  1149                           	line	153
  1150                           ;main.c: 152: }
  1151                           ;main.c: 153: break;
  1152  180  A53                	goto	l1621
  1153                           	line	154
  1154                           ;main.c: 154: case 6:
  1155                           	
  1156  181                     l147:	
  1157                           	line	155
  1158                           	
  1159  181                     l1745:	
  1160                           ;main.c: 155: if(softwareTimer >= 2) {
  1161  181  C02                	movlw	(02h)
  1162  182  09A                	subwf	(_softwareTimer)^020h,w
  1163  183  703                	skipc
  1164  184  B86                	goto	u2741
  1165  185  B87                	goto	u2740
  1166  186                     u2741:
  1167  186  A53                	goto	l1621
  1168  187                     u2740:
  1169                           	line	156
  1170                           	
  1171  187                     l1747:	
  1172                           ;main.c: 156: randomNum = rand();
  1173  187  4A3  91C  4A3      	fcall	entry__rand
  1174  18A  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1175  18B  4C4                	bcf	fsr,6	;FSR6=0, select bank0
  1176  18C  21E                	movf	(1+(?_rand)),w
  1177  18D  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1178  18E  075                	clrf	(_randomNum+1)^020h
  1179  18F  1F5                	addwf	(_randomNum+1)^020h
  1180  190  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1181  191  21D                	movf	(0+(?_rand)),w
  1182  192  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1183  193  074                	clrf	(_randomNum)^020h
  1184  194  1F4                	addwf	(_randomNum)^020h
  1185                           
  1186                           	line	157
  1187                           	
  1188  195                     l1749:	
  1189                           ;main.c: 157: PORTB = (unsigned char) (((randomNum & 0xFF00) >> 8) & 0b00110100);
  1190  195  215                	movf	(_randomNum+1)^020h,w
  1191  196  02F                	movwf	btemp+7
  1192  197  214                	movf	(_randomNum)^020h,w
  1193  198  02E                	movwf	btemp+6
  1194  199  20F                	movf	1+wtemp3,w
  1195  19A  E34                	andlw	034h
  1196  19B  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1197  19C  026                	movwf	(6)	;volatile
  1198                           	line	158
  1199                           	
  1200  19D                     l1751:	
  1201                           ;main.c: 158: PORTC = (unsigned char) ((randomNum & 0x00FF) & 0b00111111);
  1202  19D  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1203  19E  214                	movf	(_randomNum)^020h,w
  1204  19F  E3F                	andlw	03Fh
  1205  1A0  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1206  1A1  027                	movwf	(7)	;volatile
  1207                           	line	159
  1208                           	
  1209  1A2                     l1753:	
  1210                           ;main.c: 159: softwareTimer = 0;
  1211  1A2  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1212  1A3  07A                	clrf	(_softwareTimer)^020h
  1213  1A4  A53                	goto	l1621
  1214                           	line	160
  1215                           	
  1216  1A5                     l148:	
  1217                           	line	161
  1218                           ;main.c: 160: }
  1219                           ;main.c: 161: break;
  1220  1A5  A53                	goto	l1621
  1221                           	line	162
  1222                           ;main.c: 162: case 7:
  1223                           	
  1224  1A6                     l149:	
  1225                           	line	163
  1226                           	
  1227  1A6                     l1755:	
  1228                           ;main.c: 163: if(softwareTimer >= 2) {
  1229  1A6  C02                	movlw	(02h)
  1230  1A7  09A                	subwf	(_softwareTimer)^020h,w
  1231  1A8  703                	skipc
  1232  1A9  BAB                	goto	u2751
  1233  1AA  BAC                	goto	u2750
  1234  1AB                     u2751:
  1235  1AB  A53                	goto	l1621
  1236  1AC                     u2750:
  1237                           	line	164
  1238                           	
  1239  1AC                     l1757:	
  1240                           ;main.c: 164: randomNum = rand();
  1241  1AC  4A3  91C  4A3      	fcall	entry__rand
  1242  1AF  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1243  1B0  4C4                	bcf	fsr,6	;FSR6=0, select bank0
  1244  1B1  21E                	movf	(1+(?_rand)),w
  1245  1B2  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1246  1B3  075                	clrf	(_randomNum+1)^020h
  1247  1B4  1F5                	addwf	(_randomNum+1)^020h
  1248  1B5  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1249  1B6  21D                	movf	(0+(?_rand)),w
  1250  1B7  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1251  1B8  074                	clrf	(_randomNum)^020h
  1252  1B9  1F4                	addwf	(_randomNum)^020h
  1253                           
  1254                           	line	165
  1255                           	
  1256  1BA                     l1759:	
  1257                           ;main.c: 165: scratchPad = (unsigned char) (((randomNum & 0xFF00) >> 8) & 0b00110100);
  1258  1BA  215                	movf	(_randomNum+1)^020h,w
  1259  1BB  02F                	movwf	btemp+7
  1260  1BC  214                	movf	(_randomNum)^020h,w
  1261  1BD  02E                	movwf	btemp+6
  1262  1BE  20F                	movf	1+wtemp3,w
  1263  1BF  E34                	andlw	034h
  1264  1C0  039                	movwf	(_scratchPad)^020h
  1265                           	line	166
  1266                           	
  1267  1C1                     l1761:	
  1268                           ;main.c: 166: scratchPad |= 0b00000100;
  1269  1C1  559                	bsf	(_scratchPad)^020h+(2/8),(2)&7
  1270                           	line	167
  1271                           	
  1272  1C2                     l1763:	
  1273                           ;main.c: 167: PORTB = scratchPad;
  1274  1C2  219                	movf	(_scratchPad)^020h,w
  1275  1C3  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1276  1C4  026                	movwf	(6)	;volatile
  1277                           	line	168
  1278                           	
  1279  1C5                     l1765:	
  1280                           ;main.c: 168: scratchPad = (unsigned char) ((randomNum & 0x00FF) & 0b00111111);
  1281  1C5  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1282  1C6  214                	movf	(_randomNum)^020h,w
  1283  1C7  E3F                	andlw	03Fh
  1284  1C8  039                	movwf	(_scratchPad)^020h
  1285                           	line	169
  1286                           	
  1287  1C9                     l1767:	
  1288                           ;main.c: 169: scratchPad |= 0b00000011;
  1289  1C9  C03                	movlw	(03h)
  1290  1CA  02F                	movwf	btemp+7
  1291  1CB  20F                	movf	btemp+7,w
  1292  1CC  139                	iorwf	(_scratchPad)^020h,f
  1293                           	line	170
  1294                           	
  1295  1CD                     l1769:	
  1296                           ;main.c: 170: PORTC = scratchPad;
  1297  1CD  219                	movf	(_scratchPad)^020h,w
  1298  1CE  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1299  1CF  027                	movwf	(7)	;volatile
  1300                           	line	171
  1301                           	
  1302  1D0                     l1771:	
  1303                           ;main.c: 171: softwareTimer = 0;
  1304  1D0  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1305  1D1  07A                	clrf	(_softwareTimer)^020h
  1306  1D2  A53                	goto	l1621
  1307                           	line	172
  1308                           	
  1309  1D3                     l150:	
  1310                           	line	173
  1311                           ;main.c: 172: }
  1312                           ;main.c: 173: break;
  1313  1D3  A53                	goto	l1621
  1314                           	line	174
  1315                           ;main.c: 174: case 8:
  1316                           	
  1317  1D4                     l151:	
  1318                           	line	175
  1319                           	
  1320  1D4                     l1773:	
  1321                           ;main.c: 175: PORTB = 0;
  1322  1D4  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1323  1D5  066                	clrf	(6)	;volatile
  1324                           	line	176
  1325                           ;main.c: 176: PORTC = 0;
  1326  1D6  067                	clrf	(7)	;volatile
  1327                           	line	179
  1328                           	
  1329  1D7                     l1775:	
  1330                           # 179 "C:\projects-hg\christmasornament2011\code\main.c"
  1331  1D7  003                     SLEEP ;#
  1332                           psect	maintext
  1333                           	line	181
  1334                           	
  1335  1D8                     l1777:	
  1336                           # 181 "C:\projects-hg\christmasornament2011\code\main.c"
  1337                           # 180 ;#
  1338                           psect	maintext
  1339                           	line	183
  1340                           	
  1341  1D8                     l1779:	
  1342                           ;main.c: 183: currentMode = 0;
  1343  1D8  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1344  1D9  4C4                	bcf	fsr,6	;FSR6=0, select bank1
  1345  1DA  076                	clrf	(_currentMode)^020h
  1346                           	line	184
  1347                           ;main.c: 184: break;
  1348  1DB  A53                	goto	l1621
  1349                           	line	185
  1350                           ;main.c: 185: default:
  1351                           	
  1352  1DC                     l152:	
  1353                           	line	186
  1354                           	
  1355  1DC                     l1781:	
  1356                           ;main.c: 186: currentMode = 0;
  1357  1DC  076                	clrf	(_currentMode)^020h
  1358                           	line	187
  1359                           ;main.c: 187: break;
  1360  1DD  A53                	goto	l1621
  1361                           	line	188
  1362                           	
  1363  1DE                     l1783:	
  1364                           ;main.c: 188: }
  1365  1DE  A53                	goto	l1621
  1366                           	line	68
  1367                           	
  1368  1DF                     l119:	
  1369                           	
  1370  1DF                     l1785:	
  1371  1DF  216                	movf	(_currentMode)^020h,w
  1372                           	; Switch size 1, requested type "space"
  1373                           ; Number of cases is 9, Range of values is 0 to 8
  1374                           ; switch strategies available:
  1375                           ; Name         Instructions Cycles
  1376                           ; simple_byte           28    15 (average)
  1377                           ;	Chosen strategy is simple_byte
  1378                           
  1379                           	opt asmopt_off
  1380  1E0  F00                	xorlw	0^0	; case 0
  1381  1E1  643                	skipnz
  1382  1E2  AB5                	goto	l1659
  1383  1E3  F01                	xorlw	1^0	; case 1
  1384  1E4  643                	skipnz
  1385  1E5  AC4                	goto	l1665
  1386  1E6  F03                	xorlw	2^1	; case 2
  1387  1E7  643                	skipnz
  1388  1E8  AE2                	goto	l1679
  1389  1E9  F01                	xorlw	3^2	; case 3
  1390  1EA  643                	skipnz
  1391  1EB  B02                	goto	l1693
  1392  1EC  F07                	xorlw	4^3	; case 4
  1393  1ED  643                	skipnz
  1394  1EE  B31                	goto	l1713
  1395  1EF  F01                	xorlw	5^4	; case 5
  1396  1F0  643                	skipnz
  1397  1F1  B61                	goto	l1731
  1398  1F2  F03                	xorlw	6^5	; case 6
  1399  1F3  643                	skipnz
  1400  1F4  B81                	goto	l1745
  1401  1F5  F01                	xorlw	7^6	; case 7
  1402  1F6  643                	skipnz
  1403  1F7  BA6                	goto	l1755
  1404  1F8  F0F                	xorlw	8^7	; case 8
  1405  1F9  643                	skipnz
  1406  1FA  BD4                	goto	l1773
  1407  1FB  BDC                	goto	l1781
  1408                           	opt asmopt_on
  1409                           
  1410                           	line	188
  1411                           	
  1412  1FC                     l122:	
  1413  1FC  A53                	goto	l1621
  1414                           	line	190
  1415                           	
  1416  1FD                     l153:	
  1417                           	line	25
  1418  1FD  A53                	goto	l1621
  1419                           	
  1420  1FE                     l154:	
  1421                           	line	191
  1422                           	
  1423  1FE                     l155:	
  1424                           	global	start
  1425  1FE  4A3  A02           	ljmp	start
  1426                           	opt stack 0
  1427                           GLOBAL	__end_of_main
  1428  200                     	__end_of_main:
  1429 ;; =============== function _main ends ============
  1430                           
  1431                           	signat	_main,88
  1432                           	global	_rand
  1433                           psect	text160,local,class=CODE,delta=2
  1434                           global __ptext160
  1435  386                     __ptext160:
  1436                           
  1437 ;; *************** function _rand *****************
  1438 ;; Defined at:
  1439 ;;		line 14 in file "../../common/rand.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  2   13[BANK0 ] int 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, pcla
       th, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
  1453 ;;      Params:         2       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0
  1455 ;;      Temps:          1       0       0       0       0
  1456 ;;      Totals:         3       0       0       0       0
  1457 ;;Total ram usage:        3 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    1
  1460 ;; This function calls:
  1461 ;;		_srand
  1462 ;;		___lmul
  1463 ;; This function is called by:
  1464 ;;		_main
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           psect	text160
  1468                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\rand.c"
  1469                           	line	14
  1470                           	global	__size_of_rand
  1471  0079                     	__size_of_rand	equ	__end_of_rand-_rand
  1472                           	
  1473  386                     _rand:	
  1474                           	opt	stack 0
  1475                           ; Regs used in _rand: [wreg-fsr0h+status,2-btemp+7+pclath+cstack]
  1476                           psect	jmp_tab,class=ENTRY,delta=2
  1477                           global __pjmp_tab
  1478  01C                     __pjmp_tab:
  1479                           	global	entry__rand
  1480  01C                     entry__rand:
  1481  01C  5A3  B86           	ljmp	_rand
  1482                           
  1483                           psect	text160
  1484                           	line	15
  1485                           	
  1486  386                     l1607:	
  1487  386  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1488  387  4C4                	bcf	fsr,6	;FSR6=0, select bank1
  1489  388  238                	movf	(_randf)^020h,f
  1490  389  743                	skipz
  1491  38A  B8C                	goto	u2501
  1492  38B  B8D                	goto	u2500
  1493  38C                     u2501:
  1494  38C  B96                	goto	l1611
  1495  38D                     u2500:
  1496                           	line	16
  1497                           	
  1498  38D                     l1609:	
  1499  38D  C01                	movlw	low(01h)
  1500  38E  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1501  38F  030                	movwf	(?_srand)
  1502  390  C00                	movlw	high(01h)
  1503  391  031                	movwf	((?_srand))+1
  1504  392  4A3  920  5A3      	fcall	entry__srand
  1505  395  B96                	goto	l1611
  1506                           	
  1507  396                     l165:	
  1508                           	line	17
  1509                           	
  1510  396                     l1611:	
  1511  396  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1512  397  4C4                	bcf	fsr,6	;FSR6=0, select bank1
  1513  398  210                	movf	(_randx)^020h,w
  1514  399  02C                	movwf	ltemp1
  1515  39A  211                	movf	(_randx+1)^020h,w
  1516  39B  02D                	movwf	(ltemp1+1)
  1517  39C  212                	movf	(_randx+2)^020h,w
  1518  39D  02E                	movwf	(ltemp1+2)
  1519  39E  213                	movf	(_randx+3)^020h,w
  1520  39F  02F                	movwf	(ltemp1+3)
  1521  3A0  20F                	movf	3+ltemp1,w
  1522  3A1  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1523  3A2  033                	movwf	(?___lmul+3)
  1524  3A3  20E                	movf	2+ltemp1,w
  1525  3A4  032                	movwf	(?___lmul+2)
  1526  3A5  20D                	movf	1+ltemp1,w
  1527  3A6  031                	movwf	(?___lmul+1)
  1528  3A7  20C                	movf	0+ltemp1,w
  1529  3A8  030                	movwf	(?___lmul)
  1530                           
  1531  3A9  C6D                	movlw	06Dh
  1532  3AA  02C                	movwf	(btemp+4)
  1533  3AB  C4E                	movlw	04Eh
  1534  3AC  02D                	movwf	(ltemp1+1)
  1535  3AD  CC6                	movlw	0C6h
  1536  3AE  02E                	movwf	(ltemp1+2)
  1537  3AF  C41                	movlw	041h
  1538  3B0  02F                	movwf	(ltemp1+3)
  1539  3B1  20F                	movf	3+ltemp1,w
  1540  3B2  037                	movwf	3+(?___lmul)+04h
  1541  3B3  20E                	movf	2+ltemp1,w
  1542  3B4  036                	movwf	2+(?___lmul)+04h
  1543  3B5  20D                	movf	1+ltemp1,w
  1544  3B6  035                	movwf	1+(?___lmul)+04h
  1545  3B7  20C                	movf	0+ltemp1,w
  1546  3B8  034                	movwf	0+(?___lmul)+04h
  1547                           
  1548  3B9  4A3  91E  5A3      	fcall	entry____lmul
  1549  3BC  C39                	movlw	039h
  1550  3BD  02C                	movwf	(btemp+4)
  1551  3BE  C30                	movlw	030h
  1552  3BF  02D                	movwf	(ltemp1+1)
  1553  3C0  C00                	movlw	0
  1554  3C1  02E                	movwf	(ltemp1+2)
  1555  3C2  C00                	movlw	0
  1556  3C3  02F                	movwf	(ltemp1+3)
  1557  3C4  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1558  3C5  4C4                	bcf	fsr,6	;FSR6=0, select bank0
  1559  3C6  210                	movf	(0+(?___lmul)),w
  1560  3C7  1EC                	addwf	btemp+4,f
  1561  3C8  211                	movf	(1+(?___lmul)),w
  1562  3C9  603                	skipnc
  1563  3CA  3D1                	incfsz	(1+(?___lmul)),w
  1564  3CB  BCD                	goto	u2510
  1565  3CC  BCE                	goto	u2511
  1566  3CD                     u2510:
  1567  3CD  1ED                	addwf	btemp+5,f
  1568  3CE                     u2511:
  1569  3CE  212                	movf	(2+(?___lmul)),w
  1570  3CF  603                	skipnc
  1571  3D0  3D2                	incfsz	(2+(?___lmul)),w
  1572  3D1  BD3                	goto	u2512
  1573  3D2  BD4                	goto	u2513
  1574  3D3                     u2512:
  1575  3D3  1EE                	addwf	btemp+6,f
  1576  3D4                     u2513:
  1577  3D4  213                	movf	(3+(?___lmul)),w
  1578  3D5  603                	skipnc
  1579  3D6  293                	incf	(3+(?___lmul)),w
  1580  3D7  1EF                	addwf	btemp+7,f
  1581  3D8  20F                	movf	3+ltemp1,w
  1582  3D9  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1583  3DA  033                	movwf	(_randx+3)^020h
  1584  3DB  20E                	movf	2+ltemp1,w
  1585  3DC  032                	movwf	(_randx+2)^020h
  1586  3DD  20D                	movf	1+ltemp1,w
  1587  3DE  031                	movwf	(_randx+1)^020h
  1588  3DF  20C                	movf	0+ltemp1,w
  1589  3E0  030                	movwf	(_randx)^020h
  1590                           
  1591  3E1  210                	movf	((_randx)^020h),w
  1592  3E2  028                	movwf	ltemp0
  1593  3E3  211                	movf	((_randx+1)^020h),w
  1594  3E4  029                	movwf	(ltemp0+1)
  1595  3E5  212                	movf	((_randx+2)^020h),w
  1596  3E6  02A                	movwf	(ltemp0+2)
  1597  3E7  213                	movf	((_randx+3)^020h),w
  1598  3E8  02B                	movwf	(ltemp0+3)
  1599  3E9  C10                	movlw	010h
  1600  3EA  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1601  3EB  03F                	movwf	(??_rand+0)+0
  1602  3EC                     u2525:
  1603  3EC  34B                	rlf	btemp+3,w
  1604  3ED  32B                	rrf	btemp+3,f
  1605  3EE  32A                	rrf	btemp+2,f
  1606  3EF  329                	rrf	btemp+1,f
  1607  3F0  328                	rrf	btemp+0,f
  1608  3F1                     u2520:
  1609  3F1  2FF                	decfsz	(??_rand+0)+0,f
  1610  3F2  BEC                	goto	u2525
  1611  3F3  CFF                	movlw	low(07FFFh)
  1612  3F4  02E                	movwf	btemp+6
  1613  3F5  C7F                	movlw	high(07FFFh)
  1614  3F6  02F                	movwf	btemp+7
  1615  3F7  20E                	movf	0+wtemp3,w
  1616  3F8  148                	andwf	0+ltemp0,w
  1617  3F9  03D                	movwf	(?_rand)
  1618  3FA  20F                	movf	1+wtemp3,w
  1619  3FB  149                	andwf	1+ltemp0,w
  1620  3FC  03E                	movwf	1+(?_rand)
  1621  3FD  BFE                	goto	l166
  1622                           	
  1623  3FE                     l1613:	
  1624                           	line	18
  1625                           	
  1626  3FE                     l166:	
  1627  3FE  800                	retlw 0
  1628                           	opt stack 0
  1629                           GLOBAL	__end_of_rand
  1630  3FF                     	__end_of_rand:
  1631 ;; =============== function _rand ends ============
  1632                           
  1633                           	signat	_rand,90
  1634                           	global	___lmul
  1635                           psect	text161,local,class=CODE,delta=2
  1636                           global __ptext161
  1637  329                     __ptext161:
  1638                           
  1639 ;; *************** function ___lmul *****************
  1640 ;; Defined at:
  1641 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lmul.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1644 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  product         4    9[BANK0 ] unsigned long 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  4    0[BANK0 ] unsigned long 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+4, btemp+5, btemp+6, btemp+7
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
  1656 ;;      Params:         8       0       0       0       0
  1657 ;;      Locals:         4       0       0       0       0
  1658 ;;      Temps:          1       0       0       0       0
  1659 ;;      Totals:        13       0       0       0       0
  1660 ;;Total ram usage:       13 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_rand
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           psect	text161
  1669                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lmul.c"
  1670                           	line	3
  1671                           	global	__size_of___lmul
  1672  005D                     	__size_of___lmul	equ	__end_of___lmul-___lmul
  1673                           	
  1674  329                     ___lmul:	
  1675                           	opt	stack 0
  1676                           ; Regs used in ___lmul: [wreg-fsr0h+status,2+status,0+btemp+4-btemp+7]
  1677                           psect	jmp_tab
  1678                           	global	entry____lmul
  1679  01E                     entry____lmul:
  1680  01E  5A3  B29           	ljmp	___lmul
  1681                           
  1682                           psect	text161
  1683                           	line	4
  1684                           	
  1685  329                     l1591:	
  1686  329  C00                	movlw	0
  1687  32A  02C                	movwf	(btemp+4)
  1688  32B  C00                	movlw	0
  1689  32C  02D                	movwf	(ltemp1+1)
  1690  32D  C00                	movlw	0
  1691  32E  02E                	movwf	(ltemp1+2)
  1692  32F  C00                	movlw	0
  1693  330  02F                	movwf	(ltemp1+3)
  1694  331  20F                	movf	3+ltemp1,w
  1695  332  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1696  333  4C4                	bcf	fsr,6	;FSR6=0, select bank0
  1697  334  03C                	movwf	(___lmul@product+3)
  1698  335  20E                	movf	2+ltemp1,w
  1699  336  03B                	movwf	(___lmul@product+2)
  1700  337  20D                	movf	1+ltemp1,w
  1701  338  03A                	movwf	(___lmul@product+1)
  1702  339  20C                	movf	0+ltemp1,w
  1703  33A  039                	movwf	(___lmul@product)
  1704                           
  1705  33B  B3C                	goto	l1593
  1706                           	line	6
  1707                           	
  1708  33C                     l250:	
  1709                           	line	7
  1710                           	
  1711  33C                     l1593:	
  1712  33C  710                	btfss	(___lmul@multiplier),(0)&7
  1713  33D  B3F                	goto	u2461
  1714  33E  B40                	goto	u2460
  1715  33F                     u2461:
  1716  33F  B51                	goto	l1597
  1717  340                     u2460:
  1718                           	line	8
  1719                           	
  1720  340                     l1595:	
  1721  340  214                	movf	(___lmul@multiplicand),w
  1722  341  1F9                	addwf	(___lmul@product),f
  1723  342  215                	movf	(___lmul@multiplicand+1),w
  1724  343  603                	skipnc
  1725  344  295                	incf	(___lmul@multiplicand+1),w
  1726  345  743                	skipz
  1727  346  1FA                	addwf	(___lmul@product+1),f
  1728  347  216                	movf	(___lmul@multiplicand+2),w
  1729  348  603                	skipnc
  1730  349  296                	incf	(___lmul@multiplicand+2),w
  1731  34A  743                	skipz
  1732  34B  1FB                	addwf	(___lmul@product+2),f
  1733  34C  217                	movf	(___lmul@multiplicand+3),w
  1734  34D  603                	skipnc
  1735  34E  297                	incf	(___lmul@multiplicand+3),w
  1736  34F  1FC                	addwf	(___lmul@product+3),f
  1737  350  B51                	goto	l1597
  1738                           	
  1739  351                     l251:	
  1740                           	line	9
  1741                           	
  1742  351                     l1597:	
  1743  351  C01                	movlw	01h
  1744  352  038                	movwf	(??___lmul+0)+0
  1745  353                     u2475:
  1746  353  403                	clrc
  1747  354  374                	rlf	(___lmul@multiplicand),f
  1748  355  375                	rlf	(___lmul@multiplicand+1),f
  1749  356  376                	rlf	(___lmul@multiplicand+2),f
  1750  357  377                	rlf	(___lmul@multiplicand+3),f
  1751  358  2F8                	decfsz	(??___lmul+0)+0,f
  1752  359  B53                	goto	u2475
  1753                           	line	10
  1754                           	
  1755  35A                     l1599:	
  1756  35A  C01                	movlw	01h
  1757  35B  038                	movwf	(??___lmul+0)+0
  1758  35C                     u2485:
  1759  35C  403                	clrc
  1760  35D  333                	rrf	(___lmul@multiplier+3),f
  1761  35E  332                	rrf	(___lmul@multiplier+2),f
  1762  35F  331                	rrf	(___lmul@multiplier+1),f
  1763  360  330                	rrf	(___lmul@multiplier),f
  1764  361  2F8                	decfsz	(??___lmul+0)+0,f
  1765  362  B5C                	goto	u2485
  1766                           
  1767                           	line	11
  1768                           	
  1769  363                     l1601:	
  1770  363  210                	movf	(___lmul@multiplier),w
  1771  364  02C                	movwf	ltemp1
  1772  365  211                	movf	(___lmul@multiplier+1),w
  1773  366  02D                	movwf	(ltemp1+1)
  1774  367  212                	movf	(___lmul@multiplier+2),w
  1775  368  02E                	movwf	(ltemp1+2)
  1776  369  213                	movf	(___lmul@multiplier+3),w
  1777  36A  02F                	movwf	(ltemp1+3)
  1778  36B  20F                	movf	3+ltemp1,w
  1779  36C  10E                	iorwf	2+ltemp1,w
  1780  36D  10D                	iorwf	1+ltemp1,w
  1781  36E  10C                	iorwf	0+ltemp1,w
  1782  36F  743                	skipz
  1783  370  B72                	goto	u2491
  1784  371  B73                	goto	u2490
  1785  372                     u2491:
  1786  372  B3C                	goto	l1593
  1787  373                     u2490:
  1788  373  B74                	goto	l1603
  1789                           	
  1790  374                     l252:	
  1791                           	line	12
  1792                           	
  1793  374                     l1603:	
  1794  374  219                	movf	(___lmul@product),w
  1795  375  02C                	movwf	ltemp1
  1796  376  21A                	movf	(___lmul@product+1),w
  1797  377  02D                	movwf	(ltemp1+1)
  1798  378  21B                	movf	(___lmul@product+2),w
  1799  379  02E                	movwf	(ltemp1+2)
  1800  37A  21C                	movf	(___lmul@product+3),w
  1801  37B  02F                	movwf	(ltemp1+3)
  1802  37C  20F                	movf	3+ltemp1,w
  1803  37D  033                	movwf	(?___lmul+3)
  1804  37E  20E                	movf	2+ltemp1,w
  1805  37F  032                	movwf	(?___lmul+2)
  1806  380  20D                	movf	1+ltemp1,w
  1807  381  031                	movwf	(?___lmul+1)
  1808  382  20C                	movf	0+ltemp1,w
  1809  383  030                	movwf	(?___lmul)
  1810                           
  1811  384  B85                	goto	l253
  1812                           	
  1813  385                     l1605:	
  1814                           	line	13
  1815                           	
  1816  385                     l253:	
  1817  385  800                	retlw 0
  1818                           	opt stack 0
  1819                           GLOBAL	__end_of___lmul
  1820  386                     	__end_of___lmul:
  1821 ;; =============== function ___lmul ends ============
  1822                           
  1823                           	signat	___lmul,8316
  1824                           	global	_srand
  1825                           psect	text162,local,class=CODE,delta=2
  1826                           global __ptext162
  1827  039                     __ptext162:
  1828                           
  1829 ;; *************** function _srand *****************
  1830 ;; Defined at:
  1831 ;;		line 8 in file "../../common/rand.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  x               2    0[BANK0 ] unsigned int 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;		None
  1836 ;; Return value:  Size  Location     Type
  1837 ;;		None               void
  1838 ;; Registers used:
  1839 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
  1845 ;;      Params:         2       0       0       0       0
  1846 ;;      Locals:         0       0       0       0       0
  1847 ;;      Temps:          0       0       0       0       0
  1848 ;;      Totals:         2       0       0       0       0
  1849 ;;Total ram usage:        2 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_rand
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           psect	text162
  1858                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\rand.c"
  1859                           	line	8
  1860                           	global	__size_of_srand
  1861  000F                     	__size_of_srand	equ	__end_of_srand-_srand
  1862                           	
  1863  039                     _srand:	
  1864                           	opt	stack 0
  1865                           ; Regs used in _srand: [wreg-fsr0h+status,2+status,0]
  1866                           psect	jmp_tab
  1867                           	global	entry__srand
  1868  020                     entry__srand:
  1869  020  4A3  A39           	ljmp	_srand
  1870                           
  1871                           psect	text162
  1872                           	line	9
  1873                           	
  1874  039                     l1587:	
  1875  039  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1876  03A  4C4                	bcf	fsr,6	;FSR6=0, select bank0
  1877  03B  210                	movf	(srand@x),w
  1878  03C  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1879  03D  030                	movwf	(_randx)^020h
  1880  03E  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1881  03F  211                	movf	(srand@x+1),w
  1882  040  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1883  041  031                	movwf	((_randx)^020h)+1
  1884  042  072                	clrf	2+((_randx)^020h)
  1885  043  073                	clrf	3+((_randx)^020h)
  1886                           	line	10
  1887                           	
  1888  044                     l1589:	
  1889  044  078                	clrf	(_randf)^020h
  1890  045  503                	bsf	status,0
  1891  046  378                	rlf	(_randf)^020h,f
  1892                           	line	11
  1893                           	
  1894  047                     l162:	
  1895  047  800                	retlw 0
  1896                           	opt stack 0
  1897                           GLOBAL	__end_of_srand
  1898  048                     	__end_of_srand:
  1899 ;; =============== function _srand ends ============
  1900                           
  1901                           	signat	_srand,4216
  1902                           psect	text163,local,class=CODE,delta=2
  1903                           global __ptext163
  1904  000                     __ptext163:
  1905                           	global	btemp
  1906  0008                     	btemp set 08h
  1907                           
  1908                           	DABS	1,8,8	;btemp
  1909                           	global	wtemp0
  1910  0008                     	wtemp0 set btemp
  1911                           	global	wtemp1
  1912  000A                     	wtemp1 set btemp+2
  1913                           	global	wtemp2
  1914  000C                     	wtemp2 set btemp+4
  1915                           	global	wtemp3
  1916  000E                     	wtemp3 set btemp+6
  1917                           	global	ttemp0
  1918  0008                     	ttemp0 set btemp
  1919                           	global	ttemp1
  1920  000B                     	ttemp1 set btemp+3
  1921                           	global	ltemp0
  1922  0008                     	ltemp0 set btemp
  1923                           	global	ltemp1
  1924  000C                     	ltemp1 set btemp+4


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Nov 13 23:50:01 2011

                  fsr 0004                   l110 0089                   l111 00B3                   l103 0053  
                 l120 00B5                   l112 00B0                   l104 0075                   l121 00C3  
                 l113 00AB                   l105 0071                   l122 01FC                   l130 00FF  
                 l114 009C                   l106 0074                   l131 0102                   l123 00C4  
                 l107 00B4                   l115 00A9                   l140 015E                   l132 0130  
                 l124 00E1                   l116 00A7                   l108 008A                   l141 0155  
                 l133 0116                   l125 00D9                   l117 00AF                   l109 0084  
                 l150 01D3                   l142 015D                   l134 012E                   l126 00DF  
                 l118 00B2                   l119 01DF                   l151 01D4                   l143 0161  
                 l135 0125                   l127 00E2                   l152 01DC                   l144 0180  
                 l136 012D                   l128 0101                   l153 01FD                   l145 0176  
                 l137 0131                   l129 00F7                   l162 0047                   l250 033C  
                 l154 01FE                   l146 017E                   l138 0160                   l251 0351  
                 l155 01FE                   l147 0181                   l139 0146                   l252 0374  
                 l148 01A5                   l253 0385                   l165 0396                   l149 01A6  
                 l166 03FE                   indf 0000                  l1601 0363                  l1603 0374  
                l1611 0396                  l1605 0385                  l1613 03FE                  l1701 0111  
                l1621 0053                  l1607 0386                  l1711 012E                  l1703 0116  
                l1631 0071                  l1623 005C                  l1615 0048                  l1609 038D  
                l1721 0146                  l1713 0131                  l1705 011C                  l1641 008A  
                l1633 0075                  l1625 0062                  l1617 004E                  l1731 0161  
                l1723 014C                  l1715 0137                  l1707 0125                  l1651 00A0  
                l1643 0090                  l1635 007B                  l1627 0067                  l1619 0051  
                l1741 017B                  l1733 0167                  l1725 0155                  l1717 013C  
                l1709 012A                  l1661 00BB                  l1653 00A6                  l1645 0095  
                l1637 0080                  l1629 006C                  l1591 0329                  l1751 019D  
                l1743 017E                  l1735 016C                  l1727 015A                  l1719 0141  
                l1671 00D4                  l1663 00C0                  l1647 009A                  l1655 00AB  
                l1639 0084                  l1593 033C                  l1761 01C1                  l1753 01A2  
                l1745 0181                  l1737 0171                  l1729 015E                  l1681 00E8  
                l1673 00D9                  l1665 00C4                  l1649 009C                  l1657 00B0  
                l1587 0039                  l1595 0340                  l1771 01D0                  l1763 01C2  
                l1755 01A6                  l1747 0187                  l1739 0176                  l1691 00FF  
                l1683 00ED                  l1675 00DC                  l1667 00CA                  l1659 00B5  
                l1589 0044                  l1597 0351                  l1781 01DC                  l1773 01D4  
                l1765 01C5                  l1757 01AC                  l1749 0195                  l1693 0102  
                l1685 00F2                  l1677 00DF                  l1669 00CF                  l1599 035A  
                l1783 01DE                  l1775 01D7                  l1767 01C9                  l1759 01BA  
                l1695 0108                  l1687 00F7                  l1679 00E2                  l1777 01D8  
                l1769 01CD                  l1697 010D                  l1689 00FC                  l1785 01DF  
                l1779 01D8                  l1699 010F                  u2500 038D                  u2501 038C  
                u2510 03CD                  u2511 03CE                  u2520 03F1                  u2512 03D3  
                u2600 00A6                  u2513 03D4                  u2601 00A5                  u2610 00BB  
                u2530 0067                  u2611 00BA                  u2531 0066                  u2460 0340  
                u2700 013C                  u2620 00CA                  u2540 006C                  u2461 033F  
                u2525 03EC                  u2701 013B                  u2621 00C9                  u2541 006B  
                u2710 014C                  u2630 00CF                  u2550 007B                  u2711 014B  
                u2631 00CE                  u2551 007A                  u2720 0167                  u2640 00E8  
                u2560 0080                  u2721 0166                  u2641 00E7                  u2561 007F  
                u2490 0373                  u2730 016C                  u2650 00ED                  u2570 0090  
                u2491 0372                  u2475 0353                  u2731 016B                  u2651 00EC  
                u2571 008F                  u2740 0187                  u2660 0108                  u2580 0095  
                u2485 035C                  u2741 0186                  u2661 0107                  u2581 0094  
                u2750 01AC                  u2670 010D                  u2590 009A                  u2751 01AB  
                u2671 010C                  u2680 011C                  u2681 011B                  u2690 0137  
                u2691 0136                  u2767 0058         _softwareTimer 003A                  _main 0048  
                _rand 0386                  btemp 0008                  start 0002           _switchState 003B  
               ?_main 0010                 ?_rand 001D                 _PORTB 0006                 _PORTC 0007  
               _TRISB 0006                 _TRISC 0007   ___lmul@multiplicand 0014                 _randf 0038  
               _randx 0030                 _srand 0039                 ltemp0 0008                 ltemp1 000C  
               ttemp0 0008                 ttemp1 000B                 status 0003                 wtemp0 0008  
               wtemp1 000A                 wtemp2 000C                 wtemp3 000E          __end_of_main 0200  
        __end_of_rand 03FF                ??_main 003C                ??_rand 001F                ?_srand 0010  
              _OPTION 0000                ___lmul 0329           entry__srand 0020                clrloop 0014  
              srand@x 0010     _inhibitModeChange 003E          __pidataBANK1 0022         __end_of_srand 0048  
             ??_srand 0012            __pbssBANK1 0030            __pmaintext 0048               ?___lmul 0010  
      ___lmul@product 0019       __size_of___lmul 005D          entry____lmul 001E  end_of_initialization 0010  
          _scratchPad 0039          _displayState 0037        __end_of___lmul 0386   start_initialization 0004  
            ??___lmul 0018            entry__rand 001C           __pdataBANK1 003E         __pcstackBANK0 0010  
       __pcstackBANK1 003C             __pjmp_tab 001C             __ptext160 0386             __ptext161 0329  
           __ptext162 0039             __ptext163 0000        __size_of_srand 000F             _randomNum 0034  
   ___lmul@multiplier 0010           _currentMode 0036         __size_of_main 01B8         __size_of_rand 0079  
            clear_ram 0013  
