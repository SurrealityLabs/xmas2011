

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Nov 14 00:30:12 2011

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F505
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41                           # 5 "C:\projects-hg\christmasornament2011\code\main.c"
    42                           	psect config,class=CONFIG,delta=2 ;#
    43                           # 5 "C:\projects-hg\christmasornament2011\code\main.c"
    44  FFF  FFF4                	dw 0xFFFC & 0xFFF7 & 0xFFFF & 0xFFFF ;#
    45                           	FNCALL	_main,_rand
    46                           	FNCALL	_rand,_srand
    47                           	FNCALL	_rand,___lmul
    48                           	FNROOT	_main
    49                           	global	_inhibitModeChange
    50                           psect	idataBANK1,class=ENTRY,space=0,delta=2
    51                           global __pidataBANK1
    52  028                     __pidataBANK1:
    53                           	file	"C:\projects-hg\christmasornament2011\code\main.c"
    54                           	line	12
    55                           
    56                           ;initializer for _inhibitModeChange
    57  028  801                	retlw	01h
    58                           	global	_randx
    59                           	global	_randomNum
    60                           	global	_softwareTimer
    61                           	global	_currentMode
    62                           	global	_displayState
    63                           	global	_newPortB
    64                           	global	_newPortC
    65                           	global	_randf
    66                           	global	_scratchPad
    67                           	global	_switchState
    68                           	global	_OPTION
    69  0000                     _OPTION	set	0
    70                           	global	_PORTB
    71  0006                     _PORTB	set	6
    72                           	global	_PORTC
    73  0007                     _PORTC	set	7
    74                           	global	_TRISB
    75  0006                     _TRISB	set	6
    76                           	global	_TRISC
    77  0007                     _TRISC	set	7
    78                           	file	"ChristmasOrnament2011.as"
    79                           	line	#
    80                           psect cinit,class=ENTRY,delta=2
    81                           global start_initialization
    82  004                     start_initialization:
    83                           
    84                           psect	bssBANK1,class=BANK1,space=1
    85                           global __pbssBANK1
    86  030                     __pbssBANK1:
    87  030                     _randomNum:
    88  030                            ds      2
    89                           
    90  032                     _softwareTimer:
    91  032                            ds      2
    92                           
    93  034                     _currentMode:
    94  034                            ds      1
    95                           
    96  035                     _displayState:
    97  035                            ds      1
    98                           
    99  036                     _newPortB:
   100  036                            ds      1
   101                           
   102  037                     _newPortC:
   103  037                            ds      1
   104                           
   105  038                     _randf:
   106  038                            ds      1
   107                           
   108  039                     _scratchPad:
   109  039                            ds      1
   110                           
   111  03A                     _switchState:
   112  03A                            ds      1
   113                           
   114                           psect	dataBANK1,class=BANK1,space=1
   115                           global __pdataBANK1
   116  03B                     __pdataBANK1:
   117                           	file	"C:\projects-hg\christmasornament2011\code\main.c"
   118  03B                     _inhibitModeChange:
   119  03B                            ds      1
   120                           
   121                           psect	bssBANK3,class=BANK3,space=1
   122                           global __pbssBANK3
   123  070                     __pbssBANK3:
   124  070                     _randx:
   125  070                            ds      4
   126                           
   127                           psect clrtext,class=ENTRY,delta=2
   128                           global clear_ram
   129                           ;	Called with FSR containing the base address, and
   130                           ;	W with the last address+1
   131  019                     clear_ram:
   132  019  004                	clrwdt			;clear the watchdog before getting into this loop
   133  01A                     clrloop:
   134  01A  060                	clrf	indf		;clear RAM location pointed to by FSR
   135  01B  2A4                	incf	fsr,f		;increment pointer
   136  01C  184                	xorwf	fsr,w		;XOR with final address
   137  01D  E1F                	andlw	1Fh		;Test low bits only
   138  01E  643                	btfsc	status,2	;have we reached the end yet?
   139  01F  800                	retlw	0		;all done for this memory range, return
   140  020  184                	xorwf	fsr,w		;XOR again to restore value
   141  021  A1A                	goto	clrloop		;do the next byte
   142                           
   143                           ; Clear objects allocated to BANK1
   144                           psect cinit,class=ENTRY,delta=2
   145  004  C30                	movlw	__pbssBANK1
   146  005  024                	movwf	fsr
   147  006  C3B                	movlw	((__pbssBANK1)+0Bh)&0xFF
   148  007  4A3  919  4A3      	fcall	clear_ram
   149                           ; Clear objects allocated to BANK3
   150                           psect cinit,class=ENTRY,delta=2
   151  00A  C70                	movlw	__pbssBANK3
   152  00B  024                	movwf	fsr
   153  00C  C74                	movlw	((__pbssBANK3)+04h)&0xFF
   154  00D  4A3  919  4A3      	fcall	clear_ram
   155                           ; Initialize objects allocated to BANK1
   156                           	global __pidataBANK1
   157                           psect cinit,class=ENTRY,delta=2
   158  010  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   159  011  4C4                	bcf	fsr,6	;FSR6=0, select bank1
   160  012  4A3  928  4A3      	fcall	__pidataBANK1+0		;fetch initializer
   161  015  03B                	movwf	__pdataBANK1+0&01fh
   162                           psect cinit,class=ENTRY,delta=2
   163                           global end_of_initialization
   164                           
   165                           ;End of C runtime variable initialization code
   166                           
   167  016                     end_of_initialization:
   168  016  064                clrf fsr
   169  017  5A3  A27           ljmp _main	;jump to C main() function
   170                           psect	cstackBANK1,class=BANK1,space=1
   171                           global __pcstackBANK1
   172  03C                     __pcstackBANK1:
   173                           	global	??_main
   174  03C                     ??_main:	; 0 bytes @ 0x0
   175  03C                     	ds	1
   176                           psect	cstackBANK0,class=BANK0,space=1
   177                           global __pcstackBANK0
   178  010                     __pcstackBANK0:
   179                           	global	?_main
   180  010                     ?_main:	; 0 bytes @ 0x0
   181                           	global	?_srand
   182  010                     ?_srand:	; 0 bytes @ 0x0
   183                           	global	?___lmul
   184  010                     ?___lmul:	; 4 bytes @ 0x0
   185                           	global	srand@x
   186  010                     srand@x:	; 2 bytes @ 0x0
   187                           	global	___lmul@multiplier
   188  010                     ___lmul@multiplier:	; 4 bytes @ 0x0
   189  010                     	ds	2
   190                           	global	??_srand
   191  012                     ??_srand:	; 0 bytes @ 0x2
   192  012                     	ds	2
   193                           	global	___lmul@multiplicand
   194  014                     ___lmul@multiplicand:	; 4 bytes @ 0x4
   195  014                     	ds	4
   196                           	global	??___lmul
   197  018                     ??___lmul:	; 0 bytes @ 0x8
   198  018                     	ds	1
   199                           	global	___lmul@product
   200  019                     ___lmul@product:	; 4 bytes @ 0x9
   201  019                     	ds	4
   202                           	global	?_rand
   203  01D                     ?_rand:	; 2 bytes @ 0xD
   204  01D                     	ds	2
   205                           	global	??_rand
   206  01F                     ??_rand:	; 0 bytes @ 0xF
   207  01F                     	ds	1
   208 ;;Data sizes: Strings 0, constant 0, data 1, bss 15, persistent 0 stack 0
   209 ;;Auto spaces:   Size  Autos    Used
   210 ;; BANK0           16     16      16
   211 ;; BANK1           16      1      13
   212 ;; BANK3           16      0       4
   213 ;; BANK2           16      0       0
   214 ;; COMMON           0      0       0
   215                           
   216 ;;
   217 ;; Pointer list with targets:
   218                           
   219 ;; ?_rand	int  size(1) Largest target is 0
   220 ;;
   221 ;; ?___lmul	unsigned long  size(1) Largest target is 0
   222 ;;
   223                           
   224                           
   225 ;;
   226 ;; Critical Paths under _main in BANK0
   227 ;;
   228 ;;   _main->_rand
   229 ;;   _rand->___lmul
   230 ;;
   231 ;; Critical Paths under _main in BANK1
   232 ;;
   233 ;;   None.
   234 ;;
   235 ;; Critical Paths under _main in BANK3
   236 ;;
   237 ;;   None.
   238 ;;
   239 ;; Critical Paths under _main in BANK2
   240 ;;
   241 ;;   None.
   242 ;;
   243 ;; Critical Paths under _main in COMMON
   244 ;;
   245 ;;   None.
   246                           
   247 ;;
   248 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   249 ;;
   250                           
   251 ;;
   252 ;;Call Graph Tables:
   253 ;;
   254 ;; ---------------------------------------------------------------------------------
   255 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   256 ;; ---------------------------------------------------------------------------------
   257 ;; (0) _main                                                 1     1      0     114
   258 ;;                                              0 BANK1      1     1      0
   259 ;;                               _rand
   260 ;; ---------------------------------------------------------------------------------
   261 ;; (1) _rand                                                 3     1      2     114
   262 ;;                                             13 BANK0      3     1      2
   263 ;;                              _srand
   264 ;;                             ___lmul
   265 ;; ---------------------------------------------------------------------------------
   266 ;; (2) ___lmul                                              13     5      8      92
   267 ;;                                              0 BANK0     13     5      8
   268 ;; ---------------------------------------------------------------------------------
   269 ;; (2) _srand                                                2     0      2      22
   270 ;;                                              0 BANK0      2     0      2
   271 ;; ---------------------------------------------------------------------------------
   272 ;; Estimated maximum stack depth 2
   273 ;; ---------------------------------------------------------------------------------
   274                           
   275 ;; Call Graph Graphs:
   276                           
   277 ;; _main (ROOT)
   278 ;;   _rand
   279 ;;     _srand
   280 ;;     ___lmul
   281 ;;
   282                           
   283 ;; Address spaces:
   284                           
   285 ;;Name               Size   Autos  Total    Cost      Usage
   286 ;;STACK                0      0       2       0        0.0%
   287 ;;NULL                 0      0       0       0        0.0%
   288 ;;CODE                 0      0       0       0        0.0%
   289 ;;BITSFR0              0      0       0       1        0.0%
   290 ;;SFR0                 0      0       0       1        0.0%
   291 ;;ABS                  0      0      21       1        0.0%
   292 ;;BITBANK0            10      0       0       2        0.0%
   293 ;;BITSFR1              0      0       0       2        0.0%
   294 ;;SFR1                 0      0       0       2        0.0%
   295 ;;BANK0               10     10      10       3      100.0%
   296 ;;BITBANK1            10      0       0       4        0.0%
   297 ;;BITSFR3              0      0       0       4        0.0%
   298 ;;SFR3                 0      0       0       4        0.0%
   299 ;;BANK1               10      1       D       5       81.3%
   300 ;;BITSFR2              0      0       0       5        0.0%
   301 ;;SFR2                 0      0       0       5        0.0%
   302 ;;DATA                 0      0      23       6        0.0%
   303 ;;BITBANK3            10      0       0       7        0.0%
   304 ;;BANK3               10      0       4       8       25.0%
   305 ;;BITBANK2            10      0       0       9        0.0%
   306 ;;BANK2               10      0       0      10        0.0%
   307 ;;BITCOMMON            0      0       0      11        0.0%
   308 ;;COMMON               0      0       0      12        0.0%
   309                           
   310                           	global	_main
   311                           psect	maintext,global,class=CODE,delta=2
   312                           global __pmaintext
   313  227                     __pmaintext:
   314                           
   315 ;; *************** function _main *****************
   316 ;; Defined at:
   317 ;;		line 17 in file "C:\projects-hg\christmasornament2011\code\main.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;		None
   322 ;; Return value:  Size  Location     Type
   323 ;;		None               void
   324 ;; Registers used:
   325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, pcla
       th, cstack
   326 ;; Tracked objects:
   327 ;;		On entry : 17F/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
   331 ;;      Params:         0       0       0       0       0
   332 ;;      Locals:         0       0       0       0       0
   333 ;;      Temps:          0       1       0       0       0
   334 ;;      Totals:         0       1       0       0       0
   335 ;;Total ram usage:        1 bytes
   336 ;; Hardware stack levels required when called:    2
   337 ;; This function calls:
   338 ;;		_rand
   339 ;; This function is called by:
   340 ;;		Startup code after reset
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           psect	maintext
   344                           	file	"C:\projects-hg\christmasornament2011\code\main.c"
   345                           	line	17
   346                           	global	__size_of_main
   347  01D8                     	__size_of_main	equ	__end_of_main-_main
   348                           	
   349  227                     _main:	
   350                           	opt	stack 0
   351                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+7+pclath+cstack]
   352                           	line	19
   353                           	
   354  227                     l1635:	
   355                           ;main.c: 19: OPTION = 0b01000111;
   356  227  C47                	movlw	(047h)
   357  228  002                	option
   358                           	line	21
   359                           ;main.c: 21: TRISC = 0x00;
   360  229  C00                	movlw	0
   361  22A  007                	tris	0x7
   362                           	line	22
   363                           ;main.c: 22: TRISB = 0x01;
   364  22B  C01                	movlw	(01h)
   365  22C  006                	tris	0x6
   366                           	line	23
   367                           	
   368  22D                     l1637:	
   369                           ;main.c: 23: PORTC = 0x00;
   370  22D  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   371  22E  4C4                	bcf	fsr,6	;FSR6=0, select bank0
   372  22F  067                	clrf	(7)	;volatile
   373                           	line	24
   374                           	
   375  230                     l1639:	
   376                           ;main.c: 24: PORTB = 0x00;
   377  230  066                	clrf	(6)	;volatile
   378  231  A32                	goto	l1641
   379                           	line	27
   380                           ;main.c: 27: while(1) {
   381                           	
   382  232                     l107:	
   383                           	line	30
   384                           	
   385  232                     l1641:	
   386                           ;main.c: 30: PORTB = newPortB;
   387  232  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   388  233  216                	movf	(_newPortB)^020h,w
   389  234  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   390  235  026                	movwf	(6)	;volatile
   391                           	line	31
   392                           	
   393  236                     l1643:	
   394                           ;main.c: 31: PORTC = newPortC;
   395  236  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   396  237  217                	movf	(_newPortC)^020h,w
   397  238  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   398  239  027                	movwf	(7)	;volatile
   399                           	line	32
   400                           	
   401  23A                     l1645:	
   402                           ;main.c: 32: _delay((unsigned long)((50)*(4000000/4000000.0)));
   403                           	opt asmopt_off
   404  23A  C10                movlw	16
   405  23B  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   406  23C  03C                movwf	(??_main+0)^020h+0,f
   407  23D                     u2767:
   408  23D  2FC                decfsz	(??_main+0)^020h+0,f
   409  23E  A3D                	goto	u2767
   410  23F  004                	clrwdt
   411                           opt asmopt_on
   412                           
   413                           	line	33
   414                           	
   415  240                     l1647:	
   416                           ;main.c: 33: PORTB = 0;
   417  240  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   418  241  4C4                	bcf	fsr,6	;FSR6=0, select bank0
   419  242  066                	clrf	(6)	;volatile
   420                           	line	34
   421                           	
   422  243                     l1649:	
   423                           ;main.c: 34: PORTC = 0;
   424  243  067                	clrf	(7)	;volatile
   425                           	line	35
   426                           	
   427  244                     l1651:	
   428                           ;main.c: 35: _delay((unsigned long)((50)*(4000000/4000000.0)));
   429                           	opt asmopt_off
   430  244  C10                movlw	16
   431  245  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   432  246  03C                movwf	(??_main+0)^020h+0,f
   433  247                     u2777:
   434  247  2FC                decfsz	(??_main+0)^020h+0,f
   435  248  A47                	goto	u2777
   436  249  004                	clrwdt
   437                           opt asmopt_on
   438                           
   439                           	line	36
   440                           	
   441  24A                     l1653:	
   442                           ;main.c: 36: _delay((unsigned long)((250)*(4000000/4000000.0)));
   443                           	opt asmopt_off
   444  24A  C53                movlw	83
   445  24B  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   446  24C  4C4                	bcf	fsr,6	;FSR6=0, select bank1
   447  24D  03C                movwf	(??_main+0)^020h+0,f
   448  24E                     u2787:
   449  24E  2FC                decfsz	(??_main+0)^020h+0,f
   450  24F  A4E                	goto	u2787
   451                           opt asmopt_on
   452                           
   453                           	line	37
   454                           	
   455  250                     l1655:	
   456                           ;main.c: 37: _delay((unsigned long)((250)*(4000000/4000000.0)));
   457                           	opt asmopt_off
   458  250  C53                movlw	83
   459  251  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   460  252  4C4                	bcf	fsr,6	;FSR6=0, select bank1
   461  253  03C                movwf	(??_main+0)^020h+0,f
   462  254                     u2797:
   463  254  2FC                decfsz	(??_main+0)^020h+0,f
   464  255  A54                	goto	u2797
   465                           opt asmopt_on
   466                           
   467                           	line	38
   468                           	
   469  256                     l1657:	
   470                           ;main.c: 38: softwareTimer++;
   471  256  C01                	movlw	01h
   472  257  02E                	movwf	btemp+6
   473  258  06F                	clrf	btemp+7
   474  259  20E                	movf	0+wtemp3,w
   475  25A  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   476  25B  4C4                	bcf	fsr,6	;FSR6=0, select bank1
   477  25C  1F2                	addwf	(_softwareTimer)^020h,f
   478  25D  603                	skipnc
   479  25E  2B3                	incf	(_softwareTimer+1)^020h,f
   480  25F  20F                	movf	1+wtemp3,w
   481  260  1F3                	addwf	(_softwareTimer+1)^020h,f
   482                           	line	42
   483                           	
   484  261                     l1659:	
   485                           ;main.c: 42: if(switchState == 0) {
   486  261  23A                	movf	(_switchState)^020h,f
   487  262  743                	skipz
   488  263  A65                	goto	u2531
   489  264  A66                	goto	u2530
   490  265                     u2531:
   491  265  A74                	goto	l1667
   492  266                     u2530:
   493                           	line	45
   494                           	
   495  266                     l1661:	
   496                           ;main.c: 45: if(!(PORTB & 0x01)) {
   497  266  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   498  267  606                	btfsc	(6),(0)&7
   499  268  A6A                	goto	u2541
   500  269  A6B                	goto	u2540
   501  26A                     u2541:
   502  26A  A70                	goto	l1665
   503  26B                     u2540:
   504                           	line	46
   505                           	
   506  26B                     l1663:	
   507                           ;main.c: 46: switchState = 1;
   508  26B  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   509  26C  07A                	clrf	(_switchState)^020h
   510  26D  503                	bsf	status,0
   511  26E  37A                	rlf	(_switchState)^020h,f
   512                           	line	47
   513                           ;main.c: 47: } else {
   514  26F  BDE                	goto	l1821
   515                           	
   516  270                     l109:	
   517                           	line	48
   518                           	
   519  270                     l1665:	
   520                           ;main.c: 48: switchState = 0;
   521  270  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   522  271  07A                	clrf	(_switchState)^020h
   523  272  BDE                	goto	l1821
   524                           	line	49
   525                           	
   526  273                     l110:	
   527                           	line	50
   528                           ;main.c: 49: }
   529                           ;main.c: 50: } else if(switchState == 1) {
   530  273  BDE                	goto	l1821
   531                           	
   532  274                     l108:	
   533                           	
   534  274                     l1667:	
   535  274  21A                	movf	(_switchState)^020h,w
   536  275  F01                	xorlw	01h
   537  276  743                	skipz
   538  277  A79                	goto	u2551
   539  278  A7A                	goto	u2550
   540  279                     u2551:
   541  279  A89                	goto	l1675
   542  27A                     u2550:
   543                           	line	52
   544                           	
   545  27A                     l1669:	
   546                           ;main.c: 52: if(!(PORTB & 0x01)) {
   547  27A  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   548  27B  606                	btfsc	(6),(0)&7
   549  27C  A7E                	goto	u2561
   550  27D  A7F                	goto	u2560
   551  27E                     u2561:
   552  27E  A83                	goto	l1673
   553  27F                     u2560:
   554                           	line	53
   555                           	
   556  27F                     l1671:	
   557                           ;main.c: 53: switchState = 2;
   558  27F  C02                	movlw	(02h)
   559  280  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   560  281  03A                	movwf	(_switchState)^020h
   561                           	line	54
   562                           ;main.c: 54: } else {
   563  282  BDE                	goto	l1821
   564                           	
   565  283                     l113:	
   566                           	line	55
   567                           	
   568  283                     l1673:	
   569                           ;main.c: 55: switchState = 1;
   570  283  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   571  284  07A                	clrf	(_switchState)^020h
   572  285  503                	bsf	status,0
   573  286  37A                	rlf	(_switchState)^020h,f
   574  287  BDE                	goto	l1821
   575                           	line	56
   576                           	
   577  288                     l114:	
   578                           	line	57
   579                           ;main.c: 56: }
   580                           ;main.c: 57: } else if(switchState == 2) {
   581  288  BDE                	goto	l1821
   582                           	
   583  289                     l112:	
   584                           	
   585  289                     l1675:	
   586  289  21A                	movf	(_switchState)^020h,w
   587  28A  F02                	xorlw	02h
   588  28B  743                	skipz
   589  28C  A8E                	goto	u2571
   590  28D  A8F                	goto	u2570
   591  28E                     u2571:
   592  28E  AB1                	goto	l1695
   593  28F                     u2570:
   594                           	line	59
   595                           	
   596  28F                     l1677:	
   597                           ;main.c: 59: if(PORTB & 0x01) {
   598  28F  4A4                	bcf	fsr,5	;FSR5=0, select bank0
   599  290  706                	btfss	(6),(0)&7
   600  291  A93                	goto	u2581
   601  292  A94                	goto	u2580
   602  293                     u2581:
   603  293  AAC                	goto	l1693
   604  294                     u2580:
   605                           	line	60
   606                           	
   607  294                     l1679:	
   608                           ;main.c: 60: if(inhibitModeChange) {
   609  294  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   610  295  21B                	movf	(_inhibitModeChange)^020h,w
   611  296  743                	skipz
   612  297  A99                	goto	u2590
   613  298  A9B                	goto	l1683
   614  299                     u2590:
   615                           	line	61
   616                           	
   617  299                     l1681:	
   618                           ;main.c: 61: inhibitModeChange = 0;
   619  299  07B                	clrf	(_inhibitModeChange)^020h
   620                           	line	62
   621                           ;main.c: 62: } else {
   622  29A  AAA                	goto	l1691
   623                           	
   624  29B                     l118:	
   625                           	line	63
   626                           	
   627  29B                     l1683:	
   628                           ;main.c: 63: currentMode++;
   629  29B  C01                	movlw	(01h)
   630  29C  02F                	movwf	btemp+7
   631  29D  20F                	movf	btemp+7,w
   632  29E  1F4                	addwf	(_currentMode)^020h,f
   633                           	line	64
   634                           	
   635  29F                     l1685:	
   636                           ;main.c: 64: if(currentMode > 8) currentMode = 0;
   637  29F  C09                	movlw	(09h)
   638  2A0  094                	subwf	(_currentMode)^020h,w
   639  2A1  703                	skipc
   640  2A2  AA4                	goto	u2601
   641  2A3  AA5                	goto	u2600
   642  2A4                     u2601:
   643  2A4  AA6                	goto	l120
   644  2A5                     u2600:
   645                           	
   646  2A5                     l1687:	
   647  2A5  074                	clrf	(_currentMode)^020h
   648                           	
   649  2A6                     l120:	
   650                           	line	65
   651                           ;main.c: 65: displayState = 0;
   652  2A6  075                	clrf	(_displayState)^020h
   653                           	line	66
   654                           	
   655  2A7                     l1689:	
   656                           ;main.c: 66: softwareTimer = 0;
   657  2A7  072                	clrf	(_softwareTimer)^020h
   658  2A8  073                	clrf	(_softwareTimer+1)^020h
   659  2A9  AAA                	goto	l1691
   660                           	line	67
   661                           	
   662  2AA                     l119:	
   663                           	line	68
   664                           	
   665  2AA                     l1691:	
   666                           ;main.c: 67: }
   667                           ;main.c: 68: switchState = 0;
   668  2AA  07A                	clrf	(_switchState)^020h
   669                           	line	69
   670                           ;main.c: 69: } else {
   671  2AB  BDE                	goto	l1821
   672                           	
   673  2AC                     l117:	
   674                           	line	70
   675                           	
   676  2AC                     l1693:	
   677                           ;main.c: 70: switchState = 2;
   678  2AC  C02                	movlw	(02h)
   679  2AD  5A4                	bsf	fsr,5	;FSR5=1, select bank1
   680  2AE  03A                	movwf	(_switchState)^020h
   681  2AF  BDE                	goto	l1821
   682                           	line	71
   683                           	
   684  2B0                     l121:	
   685                           	line	72
   686                           ;main.c: 71: }
   687                           ;main.c: 72: } else {
   688  2B0  BDE                	goto	l1821
   689                           	
   690  2B1                     l116:	
   691                           	line	73
   692                           	
   693  2B1                     l1695:	
   694                           ;main.c: 73: switchState = 0;
   695  2B1  07A                	clrf	(_switchState)^020h
   696  2B2  BDE                	goto	l1821
   697                           	line	74
   698                           	
   699  2B3                     l122:	
   700  2B3  BDE                	goto	l1821
   701                           	
   702  2B4                     l115:	
   703  2B4  BDE                	goto	l1821
   704                           	
   705  2B5                     l111:	
   706                           	line	77
   707                           ;main.c: 74: }
   708                           ;main.c: 77: switch(currentMode) {
   709  2B5  BDE                	goto	l1821
   710                           	line	78
   711                           ;main.c: 78: case 0:
   712                           	
   713  2B6                     l124:	
   714                           	line	79
   715                           	
   716  2B6                     l1697:	
   717                           ;main.c: 79: if(softwareTimer >= 8) {
   718  2B6  C00                	movlw	high(08h)
   719  2B7  093                	subwf	(_softwareTimer+1)^020h,w
   720  2B8  C08                	movlw	low(08h)
   721  2B9  643                	skipnz
   722  2BA  092                	subwf	(_softwareTimer)^020h,w
   723  2BB  703                	skipc
   724  2BC  ABE                	goto	u2611
   725  2BD  ABF                	goto	u2610
   726  2BE                     u2611:
   727  2BE  A32                	goto	l1641
   728  2BF                     u2610:
   729                           	line	80
   730                           	
   731  2BF                     l1699:	
   732                           ;main.c: 80: newPortB = 0b00110100;
   733  2BF  C34                	movlw	(034h)
   734  2C0  036                	movwf	(_newPortB)^020h
   735                           	line	81
   736                           ;main.c: 81: newPortC = 0b00111111;
   737  2C1  C3F                	movlw	(03Fh)
   738  2C2  037                	movwf	(_newPortC)^020h
   739                           	line	82
   740                           	
   741  2C3                     l1701:	
   742                           ;main.c: 82: softwareTimer = 0;
   743  2C3  072                	clrf	(_softwareTimer)^020h
   744  2C4  073                	clrf	(_softwareTimer+1)^020h
   745  2C5  A32                	goto	l1641
   746                           	line	83
   747                           	
   748  2C6                     l125:	
   749                           	line	84
   750                           ;main.c: 83: }
   751                           ;main.c: 84: break;
   752  2C6  A32                	goto	l1641
   753                           	line	85
   754                           ;main.c: 85: case 1:
   755                           	
   756  2C7                     l127:	
   757                           	line	86
   758                           	
   759  2C7                     l1703:	
   760                           ;main.c: 86: if(softwareTimer >= 800) {
   761  2C7  C03                	movlw	high(0320h)
   762  2C8  093                	subwf	(_softwareTimer+1)^020h,w
   763  2C9  C20                	movlw	low(0320h)
   764  2CA  643                	skipnz
   765  2CB  092                	subwf	(_softwareTimer)^020h,w
   766  2CC  703                	skipc
   767  2CD  ACF                	goto	u2621
   768  2CE  AD0                	goto	u2620
   769  2CF                     u2621:
   770  2CF  A32                	goto	l1641
   771  2D0                     u2620:
   772                           	line	87
   773                           	
   774  2D0                     l1705:	
   775                           ;main.c: 87: if(displayState == 0) {
   776  2D0  235                	movf	(_displayState)^020h,f
   777  2D1  743                	skipz
   778  2D2  AD4                	goto	u2631
   779  2D3  AD5                	goto	u2630
   780  2D4                     u2631:
   781  2D4  ADD                	goto	l1711
   782  2D5                     u2630:
   783                           	line	88
   784                           	
   785  2D5                     l1707:	
   786                           ;main.c: 88: newPortB = 0b00110100;
   787  2D5  C34                	movlw	(034h)
   788  2D6  036                	movwf	(_newPortB)^020h
   789                           	line	89
   790                           ;main.c: 89: newPortC = 0b00111111;
   791  2D7  C3F                	movlw	(03Fh)
   792  2D8  037                	movwf	(_newPortC)^020h
   793                           	line	90
   794                           	
   795  2D9                     l1709:	
   796                           ;main.c: 90: displayState = 1;
   797  2D9  075                	clrf	(_displayState)^020h
   798  2DA  503                	bsf	status,0
   799  2DB  375                	rlf	(_displayState)^020h,f
   800                           	line	91
   801                           ;main.c: 91: } else {
   802  2DC  AE1                	goto	l1713
   803                           	
   804  2DD                     l129:	
   805                           	line	92
   806                           	
   807  2DD                     l1711:	
   808                           ;main.c: 92: newPortB = 0x00;
   809  2DD  076                	clrf	(_newPortB)^020h
   810                           	line	93
   811                           ;main.c: 93: newPortC = 0x00;
   812  2DE  077                	clrf	(_newPortC)^020h
   813                           	line	94
   814                           ;main.c: 94: displayState = 0;
   815  2DF  075                	clrf	(_displayState)^020h
   816  2E0  AE1                	goto	l1713
   817                           	line	95
   818                           	
   819  2E1                     l130:	
   820                           	line	96
   821                           	
   822  2E1                     l1713:	
   823                           ;main.c: 95: }
   824                           ;main.c: 96: softwareTimer = 0;
   825  2E1  072                	clrf	(_softwareTimer)^020h
   826  2E2  073                	clrf	(_softwareTimer+1)^020h
   827  2E3  A32                	goto	l1641
   828                           	line	97
   829                           	
   830  2E4                     l128:	
   831                           	line	98
   832                           ;main.c: 97: }
   833                           ;main.c: 98: break;
   834  2E4  A32                	goto	l1641
   835                           	line	99
   836                           ;main.c: 99: case 2:
   837                           	
   838  2E5                     l131:	
   839                           	line	100
   840                           	
   841  2E5                     l1715:	
   842                           ;main.c: 100: if(softwareTimer >= 800) {
   843  2E5  C03                	movlw	high(0320h)
   844  2E6  093                	subwf	(_softwareTimer+1)^020h,w
   845  2E7  C20                	movlw	low(0320h)
   846  2E8  643                	skipnz
   847  2E9  092                	subwf	(_softwareTimer)^020h,w
   848  2EA  703                	skipc
   849  2EB  AED                	goto	u2641
   850  2EC  AEE                	goto	u2640
   851  2ED                     u2641:
   852  2ED  A32                	goto	l1641
   853  2EE                     u2640:
   854                           	line	101
   855                           	
   856  2EE                     l1717:	
   857                           ;main.c: 101: if(displayState == 0) {
   858  2EE  235                	movf	(_displayState)^020h,f
   859  2EF  743                	skipz
   860  2F0  AF2                	goto	u2651
   861  2F1  AF3                	goto	u2650
   862  2F2                     u2651:
   863  2F2  AFB                	goto	l1723
   864  2F3                     u2650:
   865                           	line	102
   866                           	
   867  2F3                     l1719:	
   868                           ;main.c: 102: newPortB = 0b00000100;
   869  2F3  C04                	movlw	(04h)
   870  2F4  036                	movwf	(_newPortB)^020h
   871                           	line	103
   872                           ;main.c: 103: newPortC = 0b00101110;
   873  2F5  C2E                	movlw	(02Eh)
   874  2F6  037                	movwf	(_newPortC)^020h
   875                           	line	104
   876                           	
   877  2F7                     l1721:	
   878                           ;main.c: 104: displayState = 1;
   879  2F7  075                	clrf	(_displayState)^020h
   880  2F8  503                	bsf	status,0
   881  2F9  375                	rlf	(_displayState)^020h,f
   882                           	line	105
   883                           ;main.c: 105: } else {
   884  2FA  B01                	goto	l1727
   885                           	
   886  2FB                     l133:	
   887                           	line	106
   888                           	
   889  2FB                     l1723:	
   890                           ;main.c: 106: newPortB = 0b00110000;
   891  2FB  C30                	movlw	(030h)
   892  2FC  036                	movwf	(_newPortB)^020h
   893                           	line	107
   894                           ;main.c: 107: newPortC = 0b00010001;
   895  2FD  C11                	movlw	(011h)
   896  2FE  037                	movwf	(_newPortC)^020h
   897                           	line	108
   898                           	
   899  2FF                     l1725:	
   900                           ;main.c: 108: displayState = 0;
   901  2FF  075                	clrf	(_displayState)^020h
   902  300  B01                	goto	l1727
   903                           	line	109
   904                           	
   905  301                     l134:	
   906                           	line	110
   907                           	
   908  301                     l1727:	
   909                           ;main.c: 109: }
   910                           ;main.c: 110: softwareTimer = 0;
   911  301  072                	clrf	(_softwareTimer)^020h
   912  302  073                	clrf	(_softwareTimer+1)^020h
   913  303  A32                	goto	l1641
   914                           	line	111
   915                           	
   916  304                     l132:	
   917                           	line	112
   918                           ;main.c: 111: }
   919                           ;main.c: 112: break;
   920  304  A32                	goto	l1641
   921                           	line	113
   922                           ;main.c: 113: case 3:
   923                           	
   924  305                     l135:	
   925                           	line	114
   926                           	
   927  305                     l1729:	
   928                           ;main.c: 114: if(softwareTimer >= 400) {
   929  305  C01                	movlw	high(0190h)
   930  306  093                	subwf	(_softwareTimer+1)^020h,w
   931  307  C90                	movlw	low(0190h)
   932  308  643                	skipnz
   933  309  092                	subwf	(_softwareTimer)^020h,w
   934  30A  703                	skipc
   935  30B  B0D                	goto	u2661
   936  30C  B0E                	goto	u2660
   937  30D                     u2661:
   938  30D  A32                	goto	l1641
   939  30E                     u2660:
   940                           	line	115
   941                           	
   942  30E                     l1731:	
   943                           ;main.c: 115: if(displayState == 0) {
   944  30E  235                	movf	(_displayState)^020h,f
   945  30F  743                	skipz
   946  310  B12                	goto	u2671
   947  311  B13                	goto	u2670
   948  312                     u2671:
   949  312  B1A                	goto	l1739
   950  313                     u2670:
   951                           	line	116
   952                           	
   953  313                     l1733:	
   954                           ;main.c: 116: newPortB = 0b00000000;
   955  313  076                	clrf	(_newPortB)^020h
   956                           	line	117
   957                           	
   958  314                     l1735:	
   959                           ;main.c: 117: newPortC = 0b00010110;
   960  314  C16                	movlw	(016h)
   961  315  037                	movwf	(_newPortC)^020h
   962                           	line	118
   963                           	
   964  316                     l1737:	
   965                           ;main.c: 118: displayState = 1;
   966  316  075                	clrf	(_displayState)^020h
   967  317  503                	bsf	status,0
   968  318  375                	rlf	(_displayState)^020h,f
   969                           	line	119
   970                           ;main.c: 119: } else if(displayState == 1) {
   971  319  B2E                	goto	l1747
   972                           	
   973  31A                     l137:	
   974                           	
   975  31A                     l1739:	
   976  31A  215                	movf	(_displayState)^020h,w
   977  31B  F01                	xorlw	01h
   978  31C  743                	skipz
   979  31D  B1F                	goto	u2681
   980  31E  B20                	goto	u2680
   981  31F                     u2681:
   982  31F  B27                	goto	l1743
   983  320                     u2680:
   984                           	line	120
   985                           	
   986  320                     l1741:	
   987                           ;main.c: 120: newPortB = 0b00100000;
   988  320  C20                	movlw	(020h)
   989  321  036                	movwf	(_newPortB)^020h
   990                           	line	121
   991                           ;main.c: 121: newPortC = 0b00100001;
   992  322  C21                	movlw	(021h)
   993  323  037                	movwf	(_newPortC)^020h
   994                           	line	122
   995                           ;main.c: 122: displayState = 2;
   996  324  C02                	movlw	(02h)
   997  325  035                	movwf	(_displayState)^020h
   998                           	line	123
   999                           ;main.c: 123: } else {
  1000  326  B2E                	goto	l1747
  1001                           	
  1002  327                     l139:	
  1003                           	line	124
  1004                           	
  1005  327                     l1743:	
  1006                           ;main.c: 124: newPortB = 0b00010100;
  1007  327  C14                	movlw	(014h)
  1008  328  036                	movwf	(_newPortB)^020h
  1009                           	line	125
  1010                           ;main.c: 125: newPortC = 0b00001000;
  1011  329  C08                	movlw	(08h)
  1012  32A  037                	movwf	(_newPortC)^020h
  1013                           	line	126
  1014                           	
  1015  32B                     l1745:	
  1016                           ;main.c: 126: displayState = 0;
  1017  32B  075                	clrf	(_displayState)^020h
  1018  32C  B2E                	goto	l1747
  1019                           	line	127
  1020                           	
  1021  32D                     l140:	
  1022  32D  B2E                	goto	l1747
  1023                           	
  1024  32E                     l138:	
  1025                           	line	128
  1026                           	
  1027  32E                     l1747:	
  1028                           ;main.c: 127: }
  1029                           ;main.c: 128: softwareTimer = 0;
  1030  32E  072                	clrf	(_softwareTimer)^020h
  1031  32F  073                	clrf	(_softwareTimer+1)^020h
  1032  330  A32                	goto	l1641
  1033                           	line	129
  1034                           	
  1035  331                     l136:	
  1036                           	line	130
  1037                           ;main.c: 129: }
  1038                           ;main.c: 130: break;
  1039  331  A32                	goto	l1641
  1040                           	line	131
  1041                           ;main.c: 131: case 4:
  1042                           	
  1043  332                     l141:	
  1044                           	line	132
  1045                           	
  1046  332                     l1749:	
  1047                           ;main.c: 132: if(softwareTimer >= 400) {
  1048  332  C01                	movlw	high(0190h)
  1049  333  093                	subwf	(_softwareTimer+1)^020h,w
  1050  334  C90                	movlw	low(0190h)
  1051  335  643                	skipnz
  1052  336  092                	subwf	(_softwareTimer)^020h,w
  1053  337  703                	skipc
  1054  338  B3A                	goto	u2691
  1055  339  B3B                	goto	u2690
  1056  33A                     u2691:
  1057  33A  A32                	goto	l1641
  1058  33B                     u2690:
  1059                           	line	133
  1060                           	
  1061  33B                     l1751:	
  1062                           ;main.c: 133: if(displayState == 0) {
  1063  33B  235                	movf	(_displayState)^020h,f
  1064  33C  743                	skipz
  1065  33D  B3F                	goto	u2701
  1066  33E  B40                	goto	u2700
  1067  33F                     u2701:
  1068  33F  B48                	goto	l1757
  1069  340                     u2700:
  1070                           	line	134
  1071                           	
  1072  340                     l1753:	
  1073                           ;main.c: 134: newPortB = 0b00000100;
  1074  340  C04                	movlw	(04h)
  1075  341  036                	movwf	(_newPortB)^020h
  1076                           	line	135
  1077                           ;main.c: 135: newPortC = 0b00010111;
  1078  342  C17                	movlw	(017h)
  1079  343  037                	movwf	(_newPortC)^020h
  1080                           	line	136
  1081                           	
  1082  344                     l1755:	
  1083                           ;main.c: 136: displayState = 1;
  1084  344  075                	clrf	(_displayState)^020h
  1085  345  503                	bsf	status,0
  1086  346  375                	rlf	(_displayState)^020h,f
  1087                           	line	137
  1088                           ;main.c: 137: } else if(displayState == 1) {
  1089  347  B5C                	goto	l1765
  1090                           	
  1091  348                     l143:	
  1092                           	
  1093  348                     l1757:	
  1094  348  215                	movf	(_displayState)^020h,w
  1095  349  F01                	xorlw	01h
  1096  34A  743                	skipz
  1097  34B  B4D                	goto	u2711
  1098  34C  B4E                	goto	u2710
  1099  34D                     u2711:
  1100  34D  B55                	goto	l1761
  1101  34E                     u2710:
  1102                           	line	138
  1103                           	
  1104  34E                     l1759:	
  1105                           ;main.c: 138: newPortB = 0b00100100;
  1106  34E  C24                	movlw	(024h)
  1107  34F  036                	movwf	(_newPortB)^020h
  1108                           	line	139
  1109                           ;main.c: 139: newPortC = 0b00100011;
  1110  350  C23                	movlw	(023h)
  1111  351  037                	movwf	(_newPortC)^020h
  1112                           	line	140
  1113                           ;main.c: 140: displayState = 2;
  1114  352  C02                	movlw	(02h)
  1115  353  035                	movwf	(_displayState)^020h
  1116                           	line	141
  1117                           ;main.c: 141: } else {
  1118  354  B5C                	goto	l1765
  1119                           	
  1120  355                     l145:	
  1121                           	line	142
  1122                           	
  1123  355                     l1761:	
  1124                           ;main.c: 142: newPortB = 0b00010100;
  1125  355  C14                	movlw	(014h)
  1126  356  036                	movwf	(_newPortB)^020h
  1127                           	line	143
  1128                           ;main.c: 143: newPortC = 0b00001011;
  1129  357  C0B                	movlw	(0Bh)
  1130  358  037                	movwf	(_newPortC)^020h
  1131                           	line	144
  1132                           	
  1133  359                     l1763:	
  1134                           ;main.c: 144: displayState = 0;
  1135  359  075                	clrf	(_displayState)^020h
  1136  35A  B5C                	goto	l1765
  1137                           	line	145
  1138                           	
  1139  35B                     l146:	
  1140  35B  B5C                	goto	l1765
  1141                           	
  1142  35C                     l144:	
  1143                           	line	146
  1144                           	
  1145  35C                     l1765:	
  1146                           ;main.c: 145: }
  1147                           ;main.c: 146: softwareTimer = 0;
  1148  35C  072                	clrf	(_softwareTimer)^020h
  1149  35D  073                	clrf	(_softwareTimer+1)^020h
  1150  35E  A32                	goto	l1641
  1151                           	line	147
  1152                           	
  1153  35F                     l142:	
  1154                           	line	148
  1155                           ;main.c: 147: }
  1156                           ;main.c: 148: break;
  1157  35F  A32                	goto	l1641
  1158                           	line	149
  1159                           ;main.c: 149: case 5:
  1160                           	
  1161  360                     l147:	
  1162                           	line	150
  1163                           	
  1164  360                     l1767:	
  1165                           ;main.c: 150: if(softwareTimer >= 800) {
  1166  360  C03                	movlw	high(0320h)
  1167  361  093                	subwf	(_softwareTimer+1)^020h,w
  1168  362  C20                	movlw	low(0320h)
  1169  363  643                	skipnz
  1170  364  092                	subwf	(_softwareTimer)^020h,w
  1171  365  703                	skipc
  1172  366  B68                	goto	u2721
  1173  367  B69                	goto	u2720
  1174  368                     u2721:
  1175  368  A32                	goto	l1641
  1176  369                     u2720:
  1177                           	line	151
  1178                           	
  1179  369                     l1769:	
  1180                           ;main.c: 151: if(displayState == 0) {
  1181  369  235                	movf	(_displayState)^020h,f
  1182  36A  743                	skipz
  1183  36B  B6D                	goto	u2731
  1184  36C  B6E                	goto	u2730
  1185  36D                     u2731:
  1186  36D  B76                	goto	l1775
  1187  36E                     u2730:
  1188                           	line	152
  1189                           	
  1190  36E                     l1771:	
  1191                           ;main.c: 152: newPortB = 0b00110100;
  1192  36E  C34                	movlw	(034h)
  1193  36F  036                	movwf	(_newPortB)^020h
  1194                           	line	153
  1195                           ;main.c: 153: newPortC = 0b00111111;
  1196  370  C3F                	movlw	(03Fh)
  1197  371  037                	movwf	(_newPortC)^020h
  1198                           	line	154
  1199                           	
  1200  372                     l1773:	
  1201                           ;main.c: 154: displayState = 1;
  1202  372  075                	clrf	(_displayState)^020h
  1203  373  503                	bsf	status,0
  1204  374  375                	rlf	(_displayState)^020h,f
  1205                           	line	155
  1206                           ;main.c: 155: } else {
  1207  375  B7C                	goto	l1779
  1208                           	
  1209  376                     l149:	
  1210                           	line	156
  1211                           	
  1212  376                     l1775:	
  1213                           ;main.c: 156: newPortB = 0b00000100;
  1214  376  C04                	movlw	(04h)
  1215  377  036                	movwf	(_newPortB)^020h
  1216                           	line	157
  1217                           ;main.c: 157: newPortC = 0b00000011;
  1218  378  C03                	movlw	(03h)
  1219  379  037                	movwf	(_newPortC)^020h
  1220                           	line	158
  1221                           	
  1222  37A                     l1777:	
  1223                           ;main.c: 158: displayState = 0;
  1224  37A  075                	clrf	(_displayState)^020h
  1225  37B  B7C                	goto	l1779
  1226                           	line	159
  1227                           	
  1228  37C                     l150:	
  1229                           	line	160
  1230                           	
  1231  37C                     l1779:	
  1232                           ;main.c: 159: }
  1233                           ;main.c: 160: softwareTimer = 0;
  1234  37C  072                	clrf	(_softwareTimer)^020h
  1235  37D  073                	clrf	(_softwareTimer+1)^020h
  1236  37E  A32                	goto	l1641
  1237                           	line	161
  1238                           	
  1239  37F                     l148:	
  1240                           	line	162
  1241                           ;main.c: 161: }
  1242                           ;main.c: 162: break;
  1243  37F  A32                	goto	l1641
  1244                           	line	163
  1245                           ;main.c: 163: case 6:
  1246                           	
  1247  380                     l151:	
  1248                           	line	164
  1249                           	
  1250  380                     l1781:	
  1251                           ;main.c: 164: if(softwareTimer >= 200) {
  1252  380  C00                	movlw	high(0C8h)
  1253  381  093                	subwf	(_softwareTimer+1)^020h,w
  1254  382  CC8                	movlw	low(0C8h)
  1255  383  643                	skipnz
  1256  384  092                	subwf	(_softwareTimer)^020h,w
  1257  385  703                	skipc
  1258  386  B88                	goto	u2741
  1259  387  B89                	goto	u2740
  1260  388                     u2741:
  1261  388  A32                	goto	l1641
  1262  389                     u2740:
  1263                           	line	165
  1264                           	
  1265  389                     l1783:	
  1266                           ;main.c: 165: randomNum = rand();
  1267  389  4A3  922  5A3      	fcall	entry__rand
  1268  38C  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1269  38D  4C4                	bcf	fsr,6	;FSR6=0, select bank0
  1270  38E  21E                	movf	(1+(?_rand)),w
  1271  38F  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1272  390  071                	clrf	(_randomNum+1)^020h
  1273  391  1F1                	addwf	(_randomNum+1)^020h
  1274  392  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1275  393  21D                	movf	(0+(?_rand)),w
  1276  394  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1277  395  070                	clrf	(_randomNum)^020h
  1278  396  1F0                	addwf	(_randomNum)^020h
  1279                           
  1280                           	line	166
  1281                           	
  1282  397                     l1785:	
  1283                           ;main.c: 166: newPortB = (unsigned char) (((randomNum & 0xFF00) >> 8) & 0b00110100);
  1284  397  211                	movf	(_randomNum+1)^020h,w
  1285  398  02F                	movwf	btemp+7
  1286  399  210                	movf	(_randomNum)^020h,w
  1287  39A  02E                	movwf	btemp+6
  1288  39B  20F                	movf	1+wtemp3,w
  1289  39C  E34                	andlw	034h
  1290  39D  036                	movwf	(_newPortB)^020h
  1291                           	line	167
  1292                           	
  1293  39E                     l1787:	
  1294                           ;main.c: 167: newPortC = (unsigned char) ((randomNum & 0x00FF) & 0b00111111);
  1295  39E  210                	movf	(_randomNum)^020h,w
  1296  39F  E3F                	andlw	03Fh
  1297  3A0  037                	movwf	(_newPortC)^020h
  1298                           	line	168
  1299                           	
  1300  3A1                     l1789:	
  1301                           ;main.c: 168: softwareTimer = 0;
  1302  3A1  072                	clrf	(_softwareTimer)^020h
  1303  3A2  073                	clrf	(_softwareTimer+1)^020h
  1304  3A3  A32                	goto	l1641
  1305                           	line	169
  1306                           	
  1307  3A4                     l152:	
  1308                           	line	170
  1309                           ;main.c: 169: }
  1310                           ;main.c: 170: break;
  1311  3A4  A32                	goto	l1641
  1312                           	line	171
  1313                           ;main.c: 171: case 7:
  1314                           	
  1315  3A5                     l153:	
  1316                           	line	172
  1317                           	
  1318  3A5                     l1791:	
  1319                           ;main.c: 172: if(softwareTimer >= 200) {
  1320  3A5  C00                	movlw	high(0C8h)
  1321  3A6  093                	subwf	(_softwareTimer+1)^020h,w
  1322  3A7  CC8                	movlw	low(0C8h)
  1323  3A8  643                	skipnz
  1324  3A9  092                	subwf	(_softwareTimer)^020h,w
  1325  3AA  703                	skipc
  1326  3AB  BAD                	goto	u2751
  1327  3AC  BAE                	goto	u2750
  1328  3AD                     u2751:
  1329  3AD  A32                	goto	l1641
  1330  3AE                     u2750:
  1331                           	line	173
  1332                           	
  1333  3AE                     l1793:	
  1334                           ;main.c: 173: randomNum = rand();
  1335  3AE  4A3  922  5A3      	fcall	entry__rand
  1336  3B1  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1337  3B2  4C4                	bcf	fsr,6	;FSR6=0, select bank0
  1338  3B3  21E                	movf	(1+(?_rand)),w
  1339  3B4  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1340  3B5  071                	clrf	(_randomNum+1)^020h
  1341  3B6  1F1                	addwf	(_randomNum+1)^020h
  1342  3B7  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1343  3B8  21D                	movf	(0+(?_rand)),w
  1344  3B9  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1345  3BA  070                	clrf	(_randomNum)^020h
  1346  3BB  1F0                	addwf	(_randomNum)^020h
  1347                           
  1348                           	line	174
  1349                           	
  1350  3BC                     l1795:	
  1351                           ;main.c: 174: scratchPad = (unsigned char) (((randomNum & 0xFF00) >> 8) & 0b00110100);
  1352  3BC  211                	movf	(_randomNum+1)^020h,w
  1353  3BD  02F                	movwf	btemp+7
  1354  3BE  210                	movf	(_randomNum)^020h,w
  1355  3BF  02E                	movwf	btemp+6
  1356  3C0  20F                	movf	1+wtemp3,w
  1357  3C1  E34                	andlw	034h
  1358  3C2  039                	movwf	(_scratchPad)^020h
  1359                           	line	175
  1360                           	
  1361  3C3                     l1797:	
  1362                           ;main.c: 175: scratchPad |= 0b00000100;
  1363  3C3  559                	bsf	(_scratchPad)^020h+(2/8),(2)&7
  1364                           	line	176
  1365                           	
  1366  3C4                     l1799:	
  1367                           ;main.c: 176: newPortB = scratchPad;
  1368  3C4  219                	movf	(_scratchPad)^020h,w
  1369  3C5  036                	movwf	(_newPortB)^020h
  1370                           	line	177
  1371                           	
  1372  3C6                     l1801:	
  1373                           ;main.c: 177: scratchPad = (unsigned char) ((randomNum & 0x00FF) & 0b00111111);
  1374  3C6  210                	movf	(_randomNum)^020h,w
  1375  3C7  E3F                	andlw	03Fh
  1376  3C8  039                	movwf	(_scratchPad)^020h
  1377                           	line	178
  1378                           	
  1379  3C9                     l1803:	
  1380                           ;main.c: 178: scratchPad |= 0b00000011;
  1381  3C9  C03                	movlw	(03h)
  1382  3CA  02F                	movwf	btemp+7
  1383  3CB  20F                	movf	btemp+7,w
  1384  3CC  139                	iorwf	(_scratchPad)^020h,f
  1385                           	line	179
  1386                           	
  1387  3CD                     l1805:	
  1388                           ;main.c: 179: newPortC = scratchPad;
  1389  3CD  219                	movf	(_scratchPad)^020h,w
  1390  3CE  037                	movwf	(_newPortC)^020h
  1391                           	line	180
  1392                           	
  1393  3CF                     l1807:	
  1394                           ;main.c: 180: softwareTimer = 0;
  1395  3CF  072                	clrf	(_softwareTimer)^020h
  1396  3D0  073                	clrf	(_softwareTimer+1)^020h
  1397  3D1  A32                	goto	l1641
  1398                           	line	181
  1399                           	
  1400  3D2                     l154:	
  1401                           	line	182
  1402                           ;main.c: 181: }
  1403                           ;main.c: 182: break;
  1404  3D2  A32                	goto	l1641
  1405                           	line	183
  1406                           ;main.c: 183: case 8:
  1407                           	
  1408  3D3                     l155:	
  1409                           	line	184
  1410                           	
  1411  3D3                     l1809:	
  1412                           ;main.c: 184: PORTB = 0;
  1413  3D3  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1414  3D4  066                	clrf	(6)	;volatile
  1415                           	line	185
  1416                           ;main.c: 185: PORTC = 0;
  1417  3D5  067                	clrf	(7)	;volatile
  1418                           	line	188
  1419                           	
  1420  3D6                     l1811:	
  1421                           # 188 "C:\projects-hg\christmasornament2011\code\main.c"
  1422  3D6  003                     SLEEP ;#
  1423                           psect	maintext
  1424                           	line	190
  1425                           	
  1426  3D7                     l1813:	
  1427                           # 190 "C:\projects-hg\christmasornament2011\code\main.c"
  1428                           # 189 ;#
  1429                           psect	maintext
  1430                           	line	192
  1431                           	
  1432  3D7                     l1815:	
  1433                           ;main.c: 192: currentMode = 0;
  1434  3D7  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1435  3D8  4C4                	bcf	fsr,6	;FSR6=0, select bank1
  1436  3D9  074                	clrf	(_currentMode)^020h
  1437                           	line	193
  1438                           ;main.c: 193: break;
  1439  3DA  A32                	goto	l1641
  1440                           	line	194
  1441                           ;main.c: 194: default:
  1442                           	
  1443  3DB                     l156:	
  1444                           	line	195
  1445                           	
  1446  3DB                     l1817:	
  1447                           ;main.c: 195: currentMode = 0;
  1448  3DB  074                	clrf	(_currentMode)^020h
  1449                           	line	196
  1450                           ;main.c: 196: break;
  1451  3DC  A32                	goto	l1641
  1452                           	line	197
  1453                           	
  1454  3DD                     l1819:	
  1455                           ;main.c: 197: }
  1456  3DD  A32                	goto	l1641
  1457                           	line	77
  1458                           	
  1459  3DE                     l123:	
  1460                           	
  1461  3DE                     l1821:	
  1462  3DE  214                	movf	(_currentMode)^020h,w
  1463                           	; Switch size 1, requested type "space"
  1464                           ; Number of cases is 9, Range of values is 0 to 8
  1465                           ; switch strategies available:
  1466                           ; Name         Instructions Cycles
  1467                           ; simple_byte           28    15 (average)
  1468                           ;	Chosen strategy is simple_byte
  1469                           
  1470                           	opt asmopt_off
  1471  3DF  F00                	xorlw	0^0	; case 0
  1472  3E0  643                	skipnz
  1473  3E1  AB6                	goto	l1697
  1474  3E2  F01                	xorlw	1^0	; case 1
  1475  3E3  643                	skipnz
  1476  3E4  AC7                	goto	l1703
  1477  3E5  F03                	xorlw	2^1	; case 2
  1478  3E6  643                	skipnz
  1479  3E7  AE5                	goto	l1715
  1480  3E8  F01                	xorlw	3^2	; case 3
  1481  3E9  643                	skipnz
  1482  3EA  B05                	goto	l1729
  1483  3EB  F07                	xorlw	4^3	; case 4
  1484  3EC  643                	skipnz
  1485  3ED  B32                	goto	l1749
  1486  3EE  F01                	xorlw	5^4	; case 5
  1487  3EF  643                	skipnz
  1488  3F0  B60                	goto	l1767
  1489  3F1  F03                	xorlw	6^5	; case 6
  1490  3F2  643                	skipnz
  1491  3F3  B80                	goto	l1781
  1492  3F4  F01                	xorlw	7^6	; case 7
  1493  3F5  643                	skipnz
  1494  3F6  BA5                	goto	l1791
  1495  3F7  F0F                	xorlw	8^7	; case 8
  1496  3F8  643                	skipnz
  1497  3F9  BD3                	goto	l1809
  1498  3FA  BDB                	goto	l1817
  1499                           	opt asmopt_on
  1500                           
  1501                           	line	197
  1502                           	
  1503  3FB                     l126:	
  1504  3FB  A32                	goto	l1641
  1505                           	line	199
  1506                           	
  1507  3FC                     l157:	
  1508                           	line	27
  1509  3FC  A32                	goto	l1641
  1510                           	
  1511  3FD                     l158:	
  1512                           	line	200
  1513                           	
  1514  3FD                     l159:	
  1515                           	global	start
  1516  3FD  4A3  A02           	ljmp	start
  1517                           	opt stack 0
  1518                           GLOBAL	__end_of_main
  1519  3FF                     	__end_of_main:
  1520 ;; =============== function _main ends ============
  1521                           
  1522                           	signat	_main,88
  1523                           	global	_rand
  1524                           psect	text160,local,class=CODE,delta=2
  1525                           global __ptext160
  1526  184                     __ptext160:
  1527                           
  1528 ;; *************** function _rand *****************
  1529 ;; Defined at:
  1530 ;;		line 14 in file "../../common/rand.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  2   13[BANK0 ] int 
  1537 ;; Registers used:
  1538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, pcla
       th, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
  1544 ;;      Params:         2       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0
  1546 ;;      Temps:          1       0       0       0       0
  1547 ;;      Totals:         3       0       0       0       0
  1548 ;;Total ram usage:        3 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    1
  1551 ;; This function calls:
  1552 ;;		_srand
  1553 ;;		___lmul
  1554 ;; This function is called by:
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           psect	text160
  1559                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\rand.c"
  1560                           	line	14
  1561                           	global	__size_of_rand
  1562  007C                     	__size_of_rand	equ	__end_of_rand-_rand
  1563                           	
  1564  184                     _rand:	
  1565                           	opt	stack 0
  1566                           ; Regs used in _rand: [wreg-fsr0h+status,2-btemp+7+pclath+cstack]
  1567                           psect	jmp_tab,class=ENTRY,delta=2
  1568                           global __pjmp_tab
  1569  022                     __pjmp_tab:
  1570                           	global	entry__rand
  1571  022                     entry__rand:
  1572  022  4A3  B84           	ljmp	_rand
  1573                           
  1574                           psect	text160
  1575                           	line	15
  1576                           	
  1577  184                     l1627:	
  1578  184  5A4                	bsf	fsr,5	;FSR5=1, select bank1
  1579  185  4C4                	bcf	fsr,6	;FSR6=0, select bank1
  1580  186  238                	movf	(_randf)^020h,f
  1581  187  743                	skipz
  1582  188  B8A                	goto	u2501
  1583  189  B8B                	goto	u2500
  1584  18A                     u2501:
  1585  18A  B94                	goto	l1631
  1586  18B                     u2500:
  1587                           	line	16
  1588                           	
  1589  18B                     l1629:	
  1590  18B  C01                	movlw	low(01h)
  1591  18C  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1592  18D  030                	movwf	(?_srand)
  1593  18E  C00                	movlw	high(01h)
  1594  18F  031                	movwf	((?_srand))+1
  1595  190  4A3  926  4A3      	fcall	entry__srand
  1596  193  B94                	goto	l1631
  1597                           	
  1598  194                     l169:	
  1599                           	line	17
  1600                           	
  1601  194                     l1631:	
  1602  194  5A4                	bsf	fsr,5	;FSR5=1, select bank3
  1603  195  5C4                	bsf	fsr,6	;FSR6=1, select bank3
  1604  196  210                	movf	(_randx)^060h,w
  1605  197  02C                	movwf	ltemp1
  1606  198  211                	movf	(_randx+1)^060h,w
  1607  199  02D                	movwf	(ltemp1+1)
  1608  19A  212                	movf	(_randx+2)^060h,w
  1609  19B  02E                	movwf	(ltemp1+2)
  1610  19C  213                	movf	(_randx+3)^060h,w
  1611  19D  02F                	movwf	(ltemp1+3)
  1612  19E  20F                	movf	3+ltemp1,w
  1613  19F  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1614  1A0  4C4                	bcf	fsr,6	;FSR6=0, select bank0
  1615  1A1  033                	movwf	(?___lmul+3)
  1616  1A2  20E                	movf	2+ltemp1,w
  1617  1A3  032                	movwf	(?___lmul+2)
  1618  1A4  20D                	movf	1+ltemp1,w
  1619  1A5  031                	movwf	(?___lmul+1)
  1620  1A6  20C                	movf	0+ltemp1,w
  1621  1A7  030                	movwf	(?___lmul)
  1622                           
  1623  1A8  C6D                	movlw	06Dh
  1624  1A9  02C                	movwf	(btemp+4)
  1625  1AA  C4E                	movlw	04Eh
  1626  1AB  02D                	movwf	(ltemp1+1)
  1627  1AC  CC6                	movlw	0C6h
  1628  1AD  02E                	movwf	(ltemp1+2)
  1629  1AE  C41                	movlw	041h
  1630  1AF  02F                	movwf	(ltemp1+3)
  1631  1B0  20F                	movf	3+ltemp1,w
  1632  1B1  037                	movwf	3+(?___lmul)+04h
  1633  1B2  20E                	movf	2+ltemp1,w
  1634  1B3  036                	movwf	2+(?___lmul)+04h
  1635  1B4  20D                	movf	1+ltemp1,w
  1636  1B5  035                	movwf	1+(?___lmul)+04h
  1637  1B6  20C                	movf	0+ltemp1,w
  1638  1B7  034                	movwf	0+(?___lmul)+04h
  1639                           
  1640  1B8  4A3  924  4A3      	fcall	entry____lmul
  1641  1BB  C39                	movlw	039h
  1642  1BC  02C                	movwf	(btemp+4)
  1643  1BD  C30                	movlw	030h
  1644  1BE  02D                	movwf	(ltemp1+1)
  1645  1BF  C00                	movlw	0
  1646  1C0  02E                	movwf	(ltemp1+2)
  1647  1C1  C00                	movlw	0
  1648  1C2  02F                	movwf	(ltemp1+3)
  1649  1C3  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1650  1C4  4C4                	bcf	fsr,6	;FSR6=0, select bank0
  1651  1C5  210                	movf	(0+(?___lmul)),w
  1652  1C6  1EC                	addwf	btemp+4,f
  1653  1C7  211                	movf	(1+(?___lmul)),w
  1654  1C8  603                	skipnc
  1655  1C9  3D1                	incfsz	(1+(?___lmul)),w
  1656  1CA  BCC                	goto	u2510
  1657  1CB  BCD                	goto	u2511
  1658  1CC                     u2510:
  1659  1CC  1ED                	addwf	btemp+5,f
  1660  1CD                     u2511:
  1661  1CD  212                	movf	(2+(?___lmul)),w
  1662  1CE  603                	skipnc
  1663  1CF  3D2                	incfsz	(2+(?___lmul)),w
  1664  1D0  BD2                	goto	u2512
  1665  1D1  BD3                	goto	u2513
  1666  1D2                     u2512:
  1667  1D2  1EE                	addwf	btemp+6,f
  1668  1D3                     u2513:
  1669  1D3  213                	movf	(3+(?___lmul)),w
  1670  1D4  603                	skipnc
  1671  1D5  293                	incf	(3+(?___lmul)),w
  1672  1D6  1EF                	addwf	btemp+7,f
  1673  1D7  20F                	movf	3+ltemp1,w
  1674  1D8  5A4                	bsf	fsr,5	;FSR5=1, select bank3
  1675  1D9  5C4                	bsf	fsr,6	;FSR6=1, select bank3
  1676  1DA  033                	movwf	(_randx+3)^060h
  1677  1DB  20E                	movf	2+ltemp1,w
  1678  1DC  032                	movwf	(_randx+2)^060h
  1679  1DD  20D                	movf	1+ltemp1,w
  1680  1DE  031                	movwf	(_randx+1)^060h
  1681  1DF  20C                	movf	0+ltemp1,w
  1682  1E0  030                	movwf	(_randx)^060h
  1683                           
  1684  1E1  210                	movf	((_randx)^060h),w
  1685  1E2  028                	movwf	ltemp0
  1686  1E3  211                	movf	((_randx+1)^060h),w
  1687  1E4  029                	movwf	(ltemp0+1)
  1688  1E5  212                	movf	((_randx+2)^060h),w
  1689  1E6  02A                	movwf	(ltemp0+2)
  1690  1E7  213                	movf	((_randx+3)^060h),w
  1691  1E8  02B                	movwf	(ltemp0+3)
  1692  1E9  C10                	movlw	010h
  1693  1EA  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1694  1EB  4C4                	bcf	fsr,6	;FSR6=0, select bank0
  1695  1EC  03F                	movwf	(??_rand+0)+0
  1696  1ED                     u2525:
  1697  1ED  34B                	rlf	btemp+3,w
  1698  1EE  32B                	rrf	btemp+3,f
  1699  1EF  32A                	rrf	btemp+2,f
  1700  1F0  329                	rrf	btemp+1,f
  1701  1F1  328                	rrf	btemp+0,f
  1702  1F2                     u2520:
  1703  1F2  2FF                	decfsz	(??_rand+0)+0,f
  1704  1F3  BED                	goto	u2525
  1705  1F4  CFF                	movlw	low(07FFFh)
  1706  1F5  02E                	movwf	btemp+6
  1707  1F6  C7F                	movlw	high(07FFFh)
  1708  1F7  02F                	movwf	btemp+7
  1709  1F8  20E                	movf	0+wtemp3,w
  1710  1F9  148                	andwf	0+ltemp0,w
  1711  1FA  03D                	movwf	(?_rand)
  1712  1FB  20F                	movf	1+wtemp3,w
  1713  1FC  149                	andwf	1+ltemp0,w
  1714  1FD  03E                	movwf	1+(?_rand)
  1715  1FE  BFF                	goto	l170
  1716                           	
  1717  1FF                     l1633:	
  1718                           	line	18
  1719                           	
  1720  1FF                     l170:	
  1721  1FF  800                	retlw 0
  1722                           	opt stack 0
  1723                           GLOBAL	__end_of_rand
  1724  200                     	__end_of_rand:
  1725 ;; =============== function _rand ends ============
  1726                           
  1727                           	signat	_rand,90
  1728                           	global	___lmul
  1729                           psect	text161,local,class=CODE,delta=2
  1730                           global __ptext161
  1731  127                     __ptext161:
  1732                           
  1733 ;; *************** function ___lmul *****************
  1734 ;; Defined at:
  1735 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lmul.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1738 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  product         4    9[BANK0 ] unsigned long 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  4    0[BANK0 ] unsigned long 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+4, btemp+5, btemp+6, btemp+7
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
  1750 ;;      Params:         8       0       0       0       0
  1751 ;;      Locals:         4       0       0       0       0
  1752 ;;      Temps:          1       0       0       0       0
  1753 ;;      Totals:        13       0       0       0       0
  1754 ;;Total ram usage:       13 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_rand
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           psect	text161
  1763                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lmul.c"
  1764                           	line	3
  1765                           	global	__size_of___lmul
  1766  005D                     	__size_of___lmul	equ	__end_of___lmul-___lmul
  1767                           	
  1768  127                     ___lmul:	
  1769                           	opt	stack 0
  1770                           ; Regs used in ___lmul: [wreg-fsr0h+status,2+status,0+btemp+4-btemp+7]
  1771                           psect	jmp_tab
  1772                           	global	entry____lmul
  1773  024                     entry____lmul:
  1774  024  4A3  B27           	ljmp	___lmul
  1775                           
  1776                           psect	text161
  1777                           	line	4
  1778                           	
  1779  127                     l1611:	
  1780  127  C00                	movlw	0
  1781  128  02C                	movwf	(btemp+4)
  1782  129  C00                	movlw	0
  1783  12A  02D                	movwf	(ltemp1+1)
  1784  12B  C00                	movlw	0
  1785  12C  02E                	movwf	(ltemp1+2)
  1786  12D  C00                	movlw	0
  1787  12E  02F                	movwf	(ltemp1+3)
  1788  12F  20F                	movf	3+ltemp1,w
  1789  130  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1790  131  4C4                	bcf	fsr,6	;FSR6=0, select bank0
  1791  132  03C                	movwf	(___lmul@product+3)
  1792  133  20E                	movf	2+ltemp1,w
  1793  134  03B                	movwf	(___lmul@product+2)
  1794  135  20D                	movf	1+ltemp1,w
  1795  136  03A                	movwf	(___lmul@product+1)
  1796  137  20C                	movf	0+ltemp1,w
  1797  138  039                	movwf	(___lmul@product)
  1798                           
  1799  139  B3A                	goto	l1613
  1800                           	line	6
  1801                           	
  1802  13A                     l254:	
  1803                           	line	7
  1804                           	
  1805  13A                     l1613:	
  1806  13A  710                	btfss	(___lmul@multiplier),(0)&7
  1807  13B  B3D                	goto	u2461
  1808  13C  B3E                	goto	u2460
  1809  13D                     u2461:
  1810  13D  B4F                	goto	l1617
  1811  13E                     u2460:
  1812                           	line	8
  1813                           	
  1814  13E                     l1615:	
  1815  13E  214                	movf	(___lmul@multiplicand),w
  1816  13F  1F9                	addwf	(___lmul@product),f
  1817  140  215                	movf	(___lmul@multiplicand+1),w
  1818  141  603                	skipnc
  1819  142  295                	incf	(___lmul@multiplicand+1),w
  1820  143  743                	skipz
  1821  144  1FA                	addwf	(___lmul@product+1),f
  1822  145  216                	movf	(___lmul@multiplicand+2),w
  1823  146  603                	skipnc
  1824  147  296                	incf	(___lmul@multiplicand+2),w
  1825  148  743                	skipz
  1826  149  1FB                	addwf	(___lmul@product+2),f
  1827  14A  217                	movf	(___lmul@multiplicand+3),w
  1828  14B  603                	skipnc
  1829  14C  297                	incf	(___lmul@multiplicand+3),w
  1830  14D  1FC                	addwf	(___lmul@product+3),f
  1831  14E  B4F                	goto	l1617
  1832                           	
  1833  14F                     l255:	
  1834                           	line	9
  1835                           	
  1836  14F                     l1617:	
  1837  14F  C01                	movlw	01h
  1838  150  038                	movwf	(??___lmul+0)+0
  1839  151                     u2475:
  1840  151  403                	clrc
  1841  152  374                	rlf	(___lmul@multiplicand),f
  1842  153  375                	rlf	(___lmul@multiplicand+1),f
  1843  154  376                	rlf	(___lmul@multiplicand+2),f
  1844  155  377                	rlf	(___lmul@multiplicand+3),f
  1845  156  2F8                	decfsz	(??___lmul+0)+0,f
  1846  157  B51                	goto	u2475
  1847                           	line	10
  1848                           	
  1849  158                     l1619:	
  1850  158  C01                	movlw	01h
  1851  159  038                	movwf	(??___lmul+0)+0
  1852  15A                     u2485:
  1853  15A  403                	clrc
  1854  15B  333                	rrf	(___lmul@multiplier+3),f
  1855  15C  332                	rrf	(___lmul@multiplier+2),f
  1856  15D  331                	rrf	(___lmul@multiplier+1),f
  1857  15E  330                	rrf	(___lmul@multiplier),f
  1858  15F  2F8                	decfsz	(??___lmul+0)+0,f
  1859  160  B5A                	goto	u2485
  1860                           
  1861                           	line	11
  1862                           	
  1863  161                     l1621:	
  1864  161  210                	movf	(___lmul@multiplier),w
  1865  162  02C                	movwf	ltemp1
  1866  163  211                	movf	(___lmul@multiplier+1),w
  1867  164  02D                	movwf	(ltemp1+1)
  1868  165  212                	movf	(___lmul@multiplier+2),w
  1869  166  02E                	movwf	(ltemp1+2)
  1870  167  213                	movf	(___lmul@multiplier+3),w
  1871  168  02F                	movwf	(ltemp1+3)
  1872  169  20F                	movf	3+ltemp1,w
  1873  16A  10E                	iorwf	2+ltemp1,w
  1874  16B  10D                	iorwf	1+ltemp1,w
  1875  16C  10C                	iorwf	0+ltemp1,w
  1876  16D  743                	skipz
  1877  16E  B70                	goto	u2491
  1878  16F  B71                	goto	u2490
  1879  170                     u2491:
  1880  170  B3A                	goto	l1613
  1881  171                     u2490:
  1882  171  B72                	goto	l1623
  1883                           	
  1884  172                     l256:	
  1885                           	line	12
  1886                           	
  1887  172                     l1623:	
  1888  172  219                	movf	(___lmul@product),w
  1889  173  02C                	movwf	ltemp1
  1890  174  21A                	movf	(___lmul@product+1),w
  1891  175  02D                	movwf	(ltemp1+1)
  1892  176  21B                	movf	(___lmul@product+2),w
  1893  177  02E                	movwf	(ltemp1+2)
  1894  178  21C                	movf	(___lmul@product+3),w
  1895  179  02F                	movwf	(ltemp1+3)
  1896  17A  20F                	movf	3+ltemp1,w
  1897  17B  033                	movwf	(?___lmul+3)
  1898  17C  20E                	movf	2+ltemp1,w
  1899  17D  032                	movwf	(?___lmul+2)
  1900  17E  20D                	movf	1+ltemp1,w
  1901  17F  031                	movwf	(?___lmul+1)
  1902  180  20C                	movf	0+ltemp1,w
  1903  181  030                	movwf	(?___lmul)
  1904                           
  1905  182  B83                	goto	l257
  1906                           	
  1907  183                     l1625:	
  1908                           	line	13
  1909                           	
  1910  183                     l257:	
  1911  183  800                	retlw 0
  1912                           	opt stack 0
  1913                           GLOBAL	__end_of___lmul
  1914  184                     	__end_of___lmul:
  1915 ;; =============== function ___lmul ends ============
  1916                           
  1917                           	signat	___lmul,8316
  1918                           	global	_srand
  1919                           psect	text162,local,class=CODE,delta=2
  1920                           global __ptext162
  1921  114                     __ptext162:
  1922                           
  1923 ;; *************** function _srand *****************
  1924 ;; Defined at:
  1925 ;;		line 8 in file "../../common/rand.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  x               2    0[BANK0 ] unsigned int 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;		None               void
  1932 ;; Registers used:
  1933 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
  1939 ;;      Params:         2       0       0       0       0
  1940 ;;      Locals:         0       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0
  1942 ;;      Totals:         2       0       0       0       0
  1943 ;;Total ram usage:        2 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_rand
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           psect	text162
  1952                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\rand.c"
  1953                           	line	8
  1954                           	global	__size_of_srand
  1955  0013                     	__size_of_srand	equ	__end_of_srand-_srand
  1956                           	
  1957  114                     _srand:	
  1958                           	opt	stack 0
  1959                           ; Regs used in _srand: [wreg-fsr0h+status,2+status,0]
  1960                           psect	jmp_tab
  1961                           	global	entry__srand
  1962  026                     entry__srand:
  1963  026  4A3  B14           	ljmp	_srand
  1964                           
  1965                           psect	text162
  1966                           	line	9
  1967                           	
  1968  114                     l1607:	
  1969  114  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1970  115  4C4                	bcf	fsr,6	;FSR6=0, select bank0
  1971  116  210                	movf	(srand@x),w
  1972  117  5A4                	bsf	fsr,5	;FSR5=1, select bank3
  1973  118  5C4                	bsf	fsr,6	;FSR6=1, select bank3
  1974  119  030                	movwf	(_randx)^060h
  1975  11A  4A4                	bcf	fsr,5	;FSR5=0, select bank0
  1976  11B  4C4                	bcf	fsr,6	;FSR6=0, select bank0
  1977  11C  211                	movf	(srand@x+1),w
  1978  11D  5A4                	bsf	fsr,5	;FSR5=1, select bank3
  1979  11E  5C4                	bsf	fsr,6	;FSR6=1, select bank3
  1980  11F  031                	movwf	((_randx)^060h)+1
  1981  120  072                	clrf	2+((_randx)^060h)
  1982  121  073                	clrf	3+((_randx)^060h)
  1983                           	line	10
  1984                           	
  1985  122                     l1609:	
  1986  122  4C4                	bcf	fsr,6	;FSR6=0, select bank1
  1987  123  078                	clrf	(_randf)^020h
  1988  124  503                	bsf	status,0
  1989  125  378                	rlf	(_randf)^020h,f
  1990                           	line	11
  1991                           	
  1992  126                     l166:	
  1993  126  800                	retlw 0
  1994                           	opt stack 0
  1995                           GLOBAL	__end_of_srand
  1996  127                     	__end_of_srand:
  1997 ;; =============== function _srand ends ============
  1998                           
  1999                           	signat	_srand,4216
  2000                           psect	text163,local,class=CODE,delta=2
  2001                           global __ptext163
  2002  000                     __ptext163:
  2003                           	global	btemp
  2004  0008                     	btemp set 08h
  2005                           
  2006                           	DABS	1,8,8	;btemp
  2007                           	global	wtemp0
  2008  0008                     	wtemp0 set btemp
  2009                           	global	wtemp1
  2010  000A                     	wtemp1 set btemp+2
  2011                           	global	wtemp2
  2012  000C                     	wtemp2 set btemp+4
  2013                           	global	wtemp3
  2014  000E                     	wtemp3 set btemp+6
  2015                           	global	ttemp0
  2016  0008                     	ttemp0 set btemp
  2017                           	global	ttemp1
  2018  000B                     	ttemp1 set btemp+3
  2019                           	global	ltemp0
  2020  0008                     	ltemp0 set btemp
  2021                           	global	ltemp1
  2022  000C                     	ltemp1 set btemp+4


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Nov 14 00:30:12 2011

                  fsr 0004                   l110 0273                   l111 02B5                   l120 02A6  
                 l112 0289                   l121 02B0                   l113 0283                   l130 02E1  
                 l122 02B3                   l114 0288                   l123 03DE                   l131 02E5  
                 l115 02B4                   l107 0232                   l140 032D                   l132 0304  
                 l124 02B6                   l116 02B1                   l108 0274                   l141 0332  
                 l133 02FB                   l125 02C6                   l117 02AC                   l109 0270  
                 l126 03FB                   l150 037C                   l142 035F                   l134 0301  
                 l118 029B                   l151 0380                   l143 0348                   l135 0305  
                 l127 02C7                   l119 02AA                   l152 03A4                   l144 035C  
                 l136 0331                   l128 02E4                   l153 03A5                   l145 0355  
                 l137 031A                   l129 02DD                   l170 01FF                   l154 03D2  
                 l146 035B                   l138 032E                   l155 03D3                   l147 0360  
                 l139 0327                   l156 03DB                   l148 037F                   l157 03FC  
                 l149 0376                   l166 0126                   l254 013A                   l158 03FD  
                 l255 014F                   l159 03FD                   l256 0172                   l257 0183  
                 l169 0194                   indf 0000                  l1611 0127                  l1621 0161  
                l1613 013A                  l1701 02C3                  l1607 0114                  l1623 0172  
                l1615 013E                  l1631 0194                  l1711 02DD                  l1703 02C7  
                l1609 0122                  l1625 0183                  l1617 014F                  l1633 01FF  
                l1801 03C6                  l1721 02F7                  l1713 02E1                  l1705 02D0  
                l1641 0232                  l1619 0158                  l1627 0184                  l1811 03D6  
                l1803 03C9                  l1731 030E                  l1723 02FB                  l1715 02E5  
                l1707 02D5                  l1651 0244                  l1643 0236                  l1635 0227  
                l1629 018B                  l1813 03D7                  l1805 03CD                  l1741 0320  
                l1733 0313                  l1725 02FF                  l1717 02EE                  l1709 02D9  
                l1821 03DE                  l1661 0266                  l1653 024A                  l1645 023A  
                l1637 022D                  l1815 03D7                  l1807 03CF                  l1751 033B  
                l1743 0327                  l1735 0314                  l1727 0301                  l1719 02F3  
                l1671 027F                  l1663 026B                  l1655 0250                  l1647 0240  
                l1639 0230                  l1817 03DB                  l1809 03D3                  l1761 0355  
                l1753 0340                  l1745 032B                  l1737 0316                  l1729 0305  
                l1681 0299                  l1673 0283                  l1665 0270                  l1657 0256  
                l1649 0243                  l1819 03DD                  l1771 036E                  l1763 0359  
                l1755 0344                  l1747 032E                  l1739 031A                  l1691 02AA  
                l1683 029B                  l1675 0289                  l1667 0274                  l1659 0261  
                l1781 0380                  l1773 0372                  l1765 035C                  l1757 0348  
                l1749 0332                  l1685 029F                  l1693 02AC                  l1677 028F  
                l1669 027A                  l1791 03A5                  l1783 0389                  l1775 0376  
                l1767 0360                  l1759 034E                  l1687 02A5                  l1679 0294  
                l1695 02B1                  l1793 03AE                  l1785 0397                  l1777 037A  
                l1769 0369                  l1697 02B6                  l1689 02A7                  l1795 03BC  
                l1787 039E                  l1779 037C                  l1699 02BF                  l1797 03C3  
                l1789 03A1                  l1799 03C4                  u2500 018B                  u2501 018A  
                u2510 01CC                  u2511 01CD                  u2520 01F2                  u2512 01D2  
                u2600 02A5                  u2513 01D3                  u2601 02A4                  u2610 02BF  
                u2530 0266                  u2611 02BE                  u2531 0265                  u2460 013E  
                u2700 0340                  u2620 02D0                  u2540 026B                  u2461 013D  
                u2525 01ED                  u2701 033F                  u2621 02CF                  u2541 026A  
                u2710 034E                  u2630 02D5                  u2550 027A                  u2711 034D  
                u2631 02D4                  u2551 0279                  u2720 0369                  u2640 02EE  
                u2560 027F                  u2721 0368                  u2641 02ED                  u2561 027E  
                u2490 0171                  u2730 036E                  u2650 02F3                  u2570 028F  
                u2491 0170                  u2475 0151                  u2731 036D                  u2651 02F2  
                u2571 028E                  u2740 0389                  u2660 030E                  u2580 0294  
                u2485 015A                  u2741 0388                  u2661 030D                  u2581 0293  
                u2750 03AE                  u2670 0313                  u2590 0299                  u2751 03AD  
                u2671 0312                  u2680 0320                  u2681 031F                  u2690 033B  
                u2691 033A                  u2767 023D                  u2777 0247                  u2787 024E  
                u2797 0254         _softwareTimer 0032                  _main 0227                  _rand 0184  
                btemp 0008                  start 0002           _switchState 003A                 ?_main 0010  
               ?_rand 001D                 _PORTB 0006                 _PORTC 0007                 _TRISB 0006  
               _TRISC 0007   ___lmul@multiplicand 0014                 _randf 0038                 _randx 0070  
               _srand 0114                 ltemp0 0008                 ltemp1 000C                 ttemp0 0008  
               ttemp1 000B                 status 0003                 wtemp0 0008                 wtemp1 000A  
               wtemp2 000C                 wtemp3 000E          __end_of_main 03FF          __end_of_rand 0200  
              ??_main 003C                ??_rand 001F                ?_srand 0010                _OPTION 0000  
              ___lmul 0127           entry__srand 0026                clrloop 001A                srand@x 0010  
   _inhibitModeChange 003B          __pidataBANK1 0028         __end_of_srand 0127               ??_srand 0012  
          __pbssBANK1 0030            __pbssBANK3 0070            __pmaintext 0227               ?___lmul 0010  
      ___lmul@product 0019       __size_of___lmul 005D          entry____lmul 0024  end_of_initialization 0016  
          _scratchPad 0039          _displayState 0035        __end_of___lmul 0184   start_initialization 0004  
            ??___lmul 0018            entry__rand 0022           __pdataBANK1 003B         __pcstackBANK0 0010  
       __pcstackBANK1 003C             __pjmp_tab 0022             __ptext160 0184             __ptext161 0127  
           __ptext162 0114             __ptext163 0000        __size_of_srand 0013             _randomNum 0030  
   ___lmul@multiplier 0010           _currentMode 0034         __size_of_main 01D8         __size_of_rand 007C  
            _newPortB 0036              _newPortC 0037              clear_ram 0019  
